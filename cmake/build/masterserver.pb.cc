// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterserver.proto

#include "masterserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace backend {
PROTOBUF_CONSTEXPR GetTabletsUserRequest::GetTabletsUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsUserRequestDefaultTypeInternal() {}
  union {
    GetTabletsUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsUserRequestDefaultTypeInternal _GetTabletsUserRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsServerRequest::GetTabletsServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.primary_down_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.primary_up_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetTabletsServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsServerRequestDefaultTypeInternal() {}
  union {
    GetTabletsServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsServerRequestDefaultTypeInternal _GetTabletsServerRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsUserResponse_TabletGroup_ServerInfo::GetTabletsUserResponse_TabletGroup_ServerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsUserResponse_TabletGroup_ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsUserResponse_TabletGroup_ServerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsUserResponse_TabletGroup_ServerInfoDefaultTypeInternal() {}
  union {
    GetTabletsUserResponse_TabletGroup_ServerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsUserResponse_TabletGroup_ServerInfoDefaultTypeInternal _GetTabletsUserResponse_TabletGroup_ServerInfo_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsUserResponse_TabletGroup::GetTabletsUserResponse_TabletGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servers_)*/{}
  , /*decltype(_impl_.begin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.end_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsUserResponse_TabletGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsUserResponse_TabletGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsUserResponse_TabletGroupDefaultTypeInternal() {}
  union {
    GetTabletsUserResponse_TabletGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsUserResponse_TabletGroupDefaultTypeInternal _GetTabletsUserResponse_TabletGroup_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsUserResponse::GetTabletsUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablets_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsUserResponseDefaultTypeInternal() {}
  union {
    GetTabletsUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsUserResponseDefaultTypeInternal _GetTabletsUserResponse_default_instance_;
PROTOBUF_CONSTEXPR MasterEmpty::MasterEmpty(
    ::_pbi::ConstantInitialized) {}
struct MasterEmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MasterEmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MasterEmptyDefaultTypeInternal() {}
  union {
    MasterEmpty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MasterEmptyDefaultTypeInternal _MasterEmpty_default_instance_;
PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponse_Row_Column::MasterGetKVStoreStateResponse_Row_Column(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MasterGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MasterGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal() {}
  union {
    MasterGetKVStoreStateResponse_Row_Column _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MasterGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal _MasterGetKVStoreStateResponse_Row_Column_default_instance_;
PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponse_Row::MasterGetKVStoreStateResponse_Row(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.columns_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MasterGetKVStoreStateResponse_RowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponse_RowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MasterGetKVStoreStateResponse_RowDefaultTypeInternal() {}
  union {
    MasterGetKVStoreStateResponse_Row _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MasterGetKVStoreStateResponse_RowDefaultTypeInternal _MasterGetKVStoreStateResponse_Row_default_instance_;
PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponse::MasterGetKVStoreStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rows_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MasterGetKVStoreStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MasterGetKVStoreStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MasterGetKVStoreStateResponseDefaultTypeInternal() {}
  union {
    MasterGetKVStoreStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MasterGetKVStoreStateResponseDefaultTypeInternal _MasterGetKVStoreStateResponse_default_instance_;
PROTOBUF_CONSTEXPR KillStorageServerRequest::KillStorageServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct KillStorageServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KillStorageServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~KillStorageServerRequestDefaultTypeInternal() {}
  union {
    KillStorageServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KillStorageServerRequestDefaultTypeInternal _KillStorageServerRequest_default_instance_;
PROTOBUF_CONSTEXPR IsInitialStorageServerStartupRequest::IsInitialStorageServerStartupRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IsInitialStorageServerStartupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsInitialStorageServerStartupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsInitialStorageServerStartupRequestDefaultTypeInternal() {}
  union {
    IsInitialStorageServerStartupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsInitialStorageServerStartupRequestDefaultTypeInternal _IsInitialStorageServerStartupRequest_default_instance_;
PROTOBUF_CONSTEXPR IsInitialStorageServerStartupResponse::IsInitialStorageServerStartupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_initial_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IsInitialStorageServerStartupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IsInitialStorageServerStartupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IsInitialStorageServerStartupResponseDefaultTypeInternal() {}
  union {
    IsInitialStorageServerStartupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IsInitialStorageServerStartupResponseDefaultTypeInternal _IsInitialStorageServerStartupResponse_default_instance_;
PROTOBUF_CONSTEXPR GetStorageServerStatusesRequest::GetStorageServerStatusesRequest(
    ::_pbi::ConstantInitialized) {}
struct GetStorageServerStatusesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStorageServerStatusesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStorageServerStatusesRequestDefaultTypeInternal() {}
  union {
    GetStorageServerStatusesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStorageServerStatusesRequestDefaultTypeInternal _GetStorageServerStatusesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStorageServerStatusesResponse_ServerStatus::GetStorageServerStatusesResponse_ServerStatus(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_alive_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStorageServerStatusesResponse_ServerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStorageServerStatusesResponse_ServerStatusDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStorageServerStatusesResponse_ServerStatusDefaultTypeInternal() {}
  union {
    GetStorageServerStatusesResponse_ServerStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStorageServerStatusesResponse_ServerStatusDefaultTypeInternal _GetStorageServerStatusesResponse_ServerStatus_default_instance_;
PROTOBUF_CONSTEXPR GetStorageServerStatusesResponse::GetStorageServerStatusesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.statuses_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStorageServerStatusesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStorageServerStatusesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStorageServerStatusesResponseDefaultTypeInternal() {}
  union {
    GetStorageServerStatusesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStorageServerStatusesResponseDefaultTypeInternal _GetStorageServerStatusesResponse_default_instance_;
}  // namespace backend
static ::_pb::Metadata file_level_metadata_masterserver_2eproto[15];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_masterserver_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_masterserver_2eproto = nullptr;

const uint32_t TableStruct_masterserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _impl_.primary_down_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _impl_.primary_up_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup_ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup_ServerInfo, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup, _impl_.begin_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup, _impl_.end_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse_TabletGroup, _impl_.servers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserResponse, _impl_.tablets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::MasterEmpty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row_Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row_Column, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row_Column, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse_Row, _impl_.columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::MasterGetKVStoreStateResponse, _impl_.rows_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::KillStorageServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::KillStorageServerRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::IsInitialStorageServerStartupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::IsInitialStorageServerStartupRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::IsInitialStorageServerStartupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::IsInitialStorageServerStartupResponse, _impl_.is_initial_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesResponse_ServerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesResponse_ServerStatus, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesResponse_ServerStatus, _impl_.is_alive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetStorageServerStatusesResponse, _impl_.statuses_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::backend::GetTabletsUserRequest)},
  { 7, 16, -1, sizeof(::backend::GetTabletsServerRequest)},
  { 19, -1, -1, sizeof(::backend::GetTabletsUserResponse_TabletGroup_ServerInfo)},
  { 26, -1, -1, sizeof(::backend::GetTabletsUserResponse_TabletGroup)},
  { 35, -1, -1, sizeof(::backend::GetTabletsUserResponse)},
  { 42, -1, -1, sizeof(::backend::MasterEmpty)},
  { 48, -1, -1, sizeof(::backend::MasterGetKVStoreStateResponse_Row_Column)},
  { 56, -1, -1, sizeof(::backend::MasterGetKVStoreStateResponse_Row)},
  { 64, -1, -1, sizeof(::backend::MasterGetKVStoreStateResponse)},
  { 71, -1, -1, sizeof(::backend::KillStorageServerRequest)},
  { 78, -1, -1, sizeof(::backend::IsInitialStorageServerStartupRequest)},
  { 85, -1, -1, sizeof(::backend::IsInitialStorageServerStartupResponse)},
  { 92, -1, -1, sizeof(::backend::GetStorageServerStatusesRequest)},
  { 98, -1, -1, sizeof(::backend::GetStorageServerStatusesResponse_ServerStatus)},
  { 106, -1, -1, sizeof(::backend::GetStorageServerStatusesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::backend::_GetTabletsUserRequest_default_instance_._instance,
  &::backend::_GetTabletsServerRequest_default_instance_._instance,
  &::backend::_GetTabletsUserResponse_TabletGroup_ServerInfo_default_instance_._instance,
  &::backend::_GetTabletsUserResponse_TabletGroup_default_instance_._instance,
  &::backend::_GetTabletsUserResponse_default_instance_._instance,
  &::backend::_MasterEmpty_default_instance_._instance,
  &::backend::_MasterGetKVStoreStateResponse_Row_Column_default_instance_._instance,
  &::backend::_MasterGetKVStoreStateResponse_Row_default_instance_._instance,
  &::backend::_MasterGetKVStoreStateResponse_default_instance_._instance,
  &::backend::_KillStorageServerRequest_default_instance_._instance,
  &::backend::_IsInitialStorageServerStartupRequest_default_instance_._instance,
  &::backend::_IsInitialStorageServerStartupResponse_default_instance_._instance,
  &::backend::_GetStorageServerStatusesRequest_default_instance_._instance,
  &::backend::_GetStorageServerStatusesResponse_ServerStatus_default_instance_._instance,
  &::backend::_GetStorageServerStatusesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_masterserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022masterserver.proto\022\007backend\"$\n\025GetTabl"
  "etsUserRequest\022\013\n\003key\030\001 \001(\t\"~\n\027GetTablet"
  "sServerRequest\022\017\n\007address\030\001 \001(\t\022\031\n\014prima"
  "ry_down\030\002 \001(\tH\000\210\001\001\022\027\n\nprimary_up\030\003 \001(\tH\001"
  "\210\001\001B\017\n\r_primary_downB\r\n\013_primary_up\"\352\001\n\026"
  "GetTabletsUserResponse\022<\n\007tablets\030\001 \003(\0132"
  "+.backend.GetTabletsUserResponse.TabletG"
  "roup\032\221\001\n\013TabletGroup\022\r\n\005begin\030\001 \001(\t\022\013\n\003e"
  "nd\030\002 \001(\t\022G\n\007servers\030\003 \003(\01326.backend.GetT"
  "abletsUserResponse.TabletGroup.ServerInf"
  "o\032\035\n\nServerInfo\022\017\n\007address\030\001 \001(\t\"\r\n\013Mast"
  "erEmpty\"\330\001\n\035MasterGetKVStoreStateRespons"
  "e\0228\n\004rows\030\001 \003(\0132*.backend.MasterGetKVSto"
  "reStateResponse.Row\032}\n\003Row\022\014\n\004name\030\001 \001(\t"
  "\022B\n\007columns\030\002 \003(\01321.backend.MasterGetKVS"
  "toreStateResponse.Row.Column\032$\n\006Column\022\014"
  "\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"+\n\030KillStorag"
  "eServerRequest\022\017\n\007address\030\001 \001(\t\"7\n$IsIni"
  "tialStorageServerStartupRequest\022\017\n\007addre"
  "ss\030\001 \001(\t\";\n%IsInitialStorageServerStartu"
  "pResponse\022\022\n\nis_initial\030\001 \001(\010\"!\n\037GetStor"
  "ageServerStatusesRequest\"\237\001\n GetStorageS"
  "erverStatusesResponse\022H\n\010statuses\030\001 \003(\0132"
  "6.backend.GetStorageServerStatusesRespon"
  "se.ServerStatus\0321\n\014ServerStatus\022\017\n\007addre"
  "ss\030\001 \001(\t\022\020\n\010is_alive\030\002 \001(\0102\242\005\n\014MasterSer"
  "ver\022V\n\021GetTabletsForUser\022\036.backend.GetTa"
  "bletsUserRequest\032\037.backend.GetTabletsUse"
  "rResponse\"\000\022O\n\023GetTabletsForServer\022 .bac"
  "kend.GetTabletsServerRequest\032\024.backend.M"
  "asterEmpty\"\000\022Q\n\017GetKVStoreState\022\024.backen"
  "d.MasterEmpty\032&.backend.MasterGetKVStore"
  "StateResponse\"\000\022N\n\021KillStorageServer\022!.b"
  "ackend.KillStorageServerRequest\032\024.backen"
  "d.MasterEmpty\"\000\022P\n\023ReviveStorageServer\022!"
  ".backend.KillStorageServerRequest\032\024.back"
  "end.MasterEmpty\"\000\022\200\001\n\035IsInitialStorageSe"
  "rverStartup\022-.backend.IsInitialStorageSe"
  "rverStartupRequest\032..backend.IsInitialSt"
  "orageServerStartupResponse\"\000\022q\n\030GetStora"
  "geServerStatuses\022(.backend.GetStorageSer"
  "verStatusesRequest\032).backend.GetStorageS"
  "erverStatusesResponse\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_masterserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_masterserver_2eproto = {
    false, false, 1711, descriptor_table_protodef_masterserver_2eproto,
    "masterserver.proto",
    &descriptor_table_masterserver_2eproto_once, nullptr, 0, 15,
    schemas, file_default_instances, TableStruct_masterserver_2eproto::offsets,
    file_level_metadata_masterserver_2eproto, file_level_enum_descriptors_masterserver_2eproto,
    file_level_service_descriptors_masterserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_masterserver_2eproto_getter() {
  return &descriptor_table_masterserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_masterserver_2eproto(&descriptor_table_masterserver_2eproto);
namespace backend {

// ===================================================================

class GetTabletsUserRequest::_Internal {
 public:
};

GetTabletsUserRequest::GetTabletsUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsUserRequest)
}
GetTabletsUserRequest::GetTabletsUserRequest(const GetTabletsUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsUserRequest)
}

inline void GetTabletsUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsUserRequest::~GetTabletsUserRequest() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
}

void GetTabletsUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsUserRequest.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsUserRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsUserRequest)
  return target;
}

size_t GetTabletsUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsUserRequest::GetClassData() const { return &_class_data_; }


void GetTabletsUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsUserRequest*>(&to_msg);
  auto& from = static_cast<const GetTabletsUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsUserRequest::CopyFrom(const GetTabletsUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsUserRequest::IsInitialized() const {
  return true;
}

void GetTabletsUserRequest::InternalSwap(GetTabletsUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[0]);
}

// ===================================================================

class GetTabletsServerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetTabletsServerRequest>()._impl_._has_bits_);
  static void set_has_primary_down(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_primary_up(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

GetTabletsServerRequest::GetTabletsServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsServerRequest)
}
GetTabletsServerRequest::GetTabletsServerRequest(const GetTabletsServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.address_){}
    , decltype(_impl_.primary_down_){}
    , decltype(_impl_.primary_up_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.primary_down_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.primary_down_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_primary_down()) {
    _this->_impl_.primary_down_.Set(from._internal_primary_down(), 
      _this->GetArenaForAllocation());
  }
  _impl_.primary_up_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.primary_up_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_primary_up()) {
    _this->_impl_.primary_up_.Set(from._internal_primary_up(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsServerRequest)
}

inline void GetTabletsServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.address_){}
    , decltype(_impl_.primary_down_){}
    , decltype(_impl_.primary_up_){}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.primary_down_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.primary_down_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.primary_up_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.primary_up_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsServerRequest::~GetTabletsServerRequest() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
  _impl_.primary_down_.Destroy();
  _impl_.primary_up_.Destroy();
}

void GetTabletsServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.primary_down_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.primary_up_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsServerRequest.address"));
        } else
          goto handle_unusual;
        continue;
      // optional string primary_down = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_primary_down();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsServerRequest.primary_down"));
        } else
          goto handle_unusual;
        continue;
      // optional string primary_up = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_primary_up();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsServerRequest.primary_up"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsServerRequest.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // optional string primary_down = 2;
  if (_internal_has_primary_down()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primary_down().data(), static_cast<int>(this->_internal_primary_down().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsServerRequest.primary_down");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_primary_down(), target);
  }

  // optional string primary_up = 3;
  if (_internal_has_primary_up()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primary_up().data(), static_cast<int>(this->_internal_primary_up().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsServerRequest.primary_up");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_primary_up(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsServerRequest)
  return target;
}

size_t GetTabletsServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsServerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string primary_down = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_primary_down());
    }

    // optional string primary_up = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_primary_up());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsServerRequest::GetClassData() const { return &_class_data_; }


void GetTabletsServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsServerRequest*>(&to_msg);
  auto& from = static_cast<const GetTabletsServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_primary_down(from._internal_primary_down());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_primary_up(from._internal_primary_up());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsServerRequest::CopyFrom(const GetTabletsServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsServerRequest::IsInitialized() const {
  return true;
}

void GetTabletsServerRequest::InternalSwap(GetTabletsServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.primary_down_, lhs_arena,
      &other->_impl_.primary_down_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.primary_up_, lhs_arena,
      &other->_impl_.primary_up_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[1]);
}

// ===================================================================

class GetTabletsUserResponse_TabletGroup_ServerInfo::_Internal {
 public:
};

GetTabletsUserResponse_TabletGroup_ServerInfo::GetTabletsUserResponse_TabletGroup_ServerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
}
GetTabletsUserResponse_TabletGroup_ServerInfo::GetTabletsUserResponse_TabletGroup_ServerInfo(const GetTabletsUserResponse_TabletGroup_ServerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsUserResponse_TabletGroup_ServerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
}

inline void GetTabletsUserResponse_TabletGroup_ServerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsUserResponse_TabletGroup_ServerInfo::~GetTabletsUserResponse_TabletGroup_ServerInfo() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsUserResponse_TabletGroup_ServerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void GetTabletsUserResponse_TabletGroup_ServerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsUserResponse_TabletGroup_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsUserResponse_TabletGroup_ServerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsUserResponse.TabletGroup.ServerInfo.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsUserResponse_TabletGroup_ServerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsUserResponse.TabletGroup.ServerInfo.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  return target;
}

size_t GetTabletsUserResponse_TabletGroup_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsUserResponse_TabletGroup_ServerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsUserResponse_TabletGroup_ServerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsUserResponse_TabletGroup_ServerInfo::GetClassData() const { return &_class_data_; }


void GetTabletsUserResponse_TabletGroup_ServerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsUserResponse_TabletGroup_ServerInfo*>(&to_msg);
  auto& from = static_cast<const GetTabletsUserResponse_TabletGroup_ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsUserResponse_TabletGroup_ServerInfo::CopyFrom(const GetTabletsUserResponse_TabletGroup_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsUserResponse.TabletGroup.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsUserResponse_TabletGroup_ServerInfo::IsInitialized() const {
  return true;
}

void GetTabletsUserResponse_TabletGroup_ServerInfo::InternalSwap(GetTabletsUserResponse_TabletGroup_ServerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsUserResponse_TabletGroup_ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[2]);
}

// ===================================================================

class GetTabletsUserResponse_TabletGroup::_Internal {
 public:
};

GetTabletsUserResponse_TabletGroup::GetTabletsUserResponse_TabletGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsUserResponse.TabletGroup)
}
GetTabletsUserResponse_TabletGroup::GetTabletsUserResponse_TabletGroup(const GetTabletsUserResponse_TabletGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsUserResponse_TabletGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){from._impl_.servers_}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_begin().empty()) {
    _this->_impl_.begin_.Set(from._internal_begin(), 
      _this->GetArenaForAllocation());
  }
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end().empty()) {
    _this->_impl_.end_.Set(from._internal_end(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsUserResponse.TabletGroup)
}

inline void GetTabletsUserResponse_TabletGroup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){arena}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsUserResponse_TabletGroup::~GetTabletsUserResponse_TabletGroup() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsUserResponse.TabletGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsUserResponse_TabletGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servers_.~RepeatedPtrField();
  _impl_.begin_.Destroy();
  _impl_.end_.Destroy();
}

void GetTabletsUserResponse_TabletGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsUserResponse_TabletGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsUserResponse.TabletGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servers_.Clear();
  _impl_.begin_.ClearToEmpty();
  _impl_.end_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsUserResponse_TabletGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string begin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_begin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsUserResponse.TabletGroup.begin"));
        } else
          goto handle_unusual;
        continue;
      // string end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_end();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsUserResponse.TabletGroup.end"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.GetTabletsUserResponse.TabletGroup.ServerInfo servers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_servers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsUserResponse_TabletGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsUserResponse.TabletGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_begin().data(), static_cast<int>(this->_internal_begin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsUserResponse.TabletGroup.begin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_begin(), target);
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end().data(), static_cast<int>(this->_internal_end().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsUserResponse.TabletGroup.end");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_end(), target);
  }

  // repeated .backend.GetTabletsUserResponse.TabletGroup.ServerInfo servers = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_servers_size()); i < n; i++) {
    const auto& repfield = this->_internal_servers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsUserResponse.TabletGroup)
  return target;
}

size_t GetTabletsUserResponse_TabletGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsUserResponse.TabletGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetTabletsUserResponse.TabletGroup.ServerInfo servers = 3;
  total_size += 1UL * this->_internal_servers_size();
  for (const auto& msg : this->_impl_.servers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_begin());
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsUserResponse_TabletGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsUserResponse_TabletGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsUserResponse_TabletGroup::GetClassData() const { return &_class_data_; }


void GetTabletsUserResponse_TabletGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsUserResponse_TabletGroup*>(&to_msg);
  auto& from = static_cast<const GetTabletsUserResponse_TabletGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsUserResponse.TabletGroup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.servers_.MergeFrom(from._impl_.servers_);
  if (!from._internal_begin().empty()) {
    _this->_internal_set_begin(from._internal_begin());
  }
  if (!from._internal_end().empty()) {
    _this->_internal_set_end(from._internal_end());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsUserResponse_TabletGroup::CopyFrom(const GetTabletsUserResponse_TabletGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsUserResponse.TabletGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsUserResponse_TabletGroup::IsInitialized() const {
  return true;
}

void GetTabletsUserResponse_TabletGroup::InternalSwap(GetTabletsUserResponse_TabletGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.servers_.InternalSwap(&other->_impl_.servers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.begin_, lhs_arena,
      &other->_impl_.begin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.end_, lhs_arena,
      &other->_impl_.end_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsUserResponse_TabletGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[3]);
}

// ===================================================================

class GetTabletsUserResponse::_Internal {
 public:
};

GetTabletsUserResponse::GetTabletsUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsUserResponse)
}
GetTabletsUserResponse::GetTabletsUserResponse(const GetTabletsUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){from._impl_.tablets_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsUserResponse)
}

inline void GetTabletsUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTabletsUserResponse::~GetTabletsUserResponse() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablets_.~RepeatedPtrField();
}

void GetTabletsUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.GetTabletsUserResponse.TabletGroup tablets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tablets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.GetTabletsUserResponse.TabletGroup tablets = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tablets_size()); i < n; i++) {
    const auto& repfield = this->_internal_tablets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsUserResponse)
  return target;
}

size_t GetTabletsUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetTabletsUserResponse.TabletGroup tablets = 1;
  total_size += 1UL * this->_internal_tablets_size();
  for (const auto& msg : this->_impl_.tablets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsUserResponse::GetClassData() const { return &_class_data_; }


void GetTabletsUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsUserResponse*>(&to_msg);
  auto& from = static_cast<const GetTabletsUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tablets_.MergeFrom(from._impl_.tablets_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsUserResponse::CopyFrom(const GetTabletsUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsUserResponse::IsInitialized() const {
  return true;
}

void GetTabletsUserResponse::InternalSwap(GetTabletsUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tablets_.InternalSwap(&other->_impl_.tablets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[4]);
}

// ===================================================================

class MasterEmpty::_Internal {
 public:
};

MasterEmpty::MasterEmpty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.MasterEmpty)
}
MasterEmpty::MasterEmpty(const MasterEmpty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MasterEmpty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.MasterEmpty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterEmpty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterEmpty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MasterEmpty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[5]);
}

// ===================================================================

class MasterGetKVStoreStateResponse_Row_Column::_Internal {
 public:
};

MasterGetKVStoreStateResponse_Row_Column::MasterGetKVStoreStateResponse_Row_Column(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.MasterGetKVStoreStateResponse.Row.Column)
}
MasterGetKVStoreStateResponse_Row_Column::MasterGetKVStoreStateResponse_Row_Column(const MasterGetKVStoreStateResponse_Row_Column& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MasterGetKVStoreStateResponse_Row_Column* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.MasterGetKVStoreStateResponse.Row.Column)
}

inline void MasterGetKVStoreStateResponse_Row_Column::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MasterGetKVStoreStateResponse_Row_Column::~MasterGetKVStoreStateResponse_Row_Column() {
  // @@protoc_insertion_point(destructor:backend.MasterGetKVStoreStateResponse.Row.Column)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MasterGetKVStoreStateResponse_Row_Column::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.data_.Destroy();
}

void MasterGetKVStoreStateResponse_Row_Column::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MasterGetKVStoreStateResponse_Row_Column::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.MasterGetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterGetKVStoreStateResponse_Row_Column::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.MasterGetKVStoreStateResponse.Row.Column.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MasterGetKVStoreStateResponse_Row_Column::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.MasterGetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.MasterGetKVStoreStateResponse.Row.Column.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.MasterGetKVStoreStateResponse.Row.Column)
  return target;
}

size_t MasterGetKVStoreStateResponse_Row_Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.MasterGetKVStoreStateResponse.Row.Column)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterGetKVStoreStateResponse_Row_Column::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MasterGetKVStoreStateResponse_Row_Column::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterGetKVStoreStateResponse_Row_Column::GetClassData() const { return &_class_data_; }


void MasterGetKVStoreStateResponse_Row_Column::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MasterGetKVStoreStateResponse_Row_Column*>(&to_msg);
  auto& from = static_cast<const MasterGetKVStoreStateResponse_Row_Column&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.MasterGetKVStoreStateResponse.Row.Column)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MasterGetKVStoreStateResponse_Row_Column::CopyFrom(const MasterGetKVStoreStateResponse_Row_Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.MasterGetKVStoreStateResponse.Row.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterGetKVStoreStateResponse_Row_Column::IsInitialized() const {
  return true;
}

void MasterGetKVStoreStateResponse_Row_Column::InternalSwap(MasterGetKVStoreStateResponse_Row_Column* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterGetKVStoreStateResponse_Row_Column::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[6]);
}

// ===================================================================

class MasterGetKVStoreStateResponse_Row::_Internal {
 public:
};

MasterGetKVStoreStateResponse_Row::MasterGetKVStoreStateResponse_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.MasterGetKVStoreStateResponse.Row)
}
MasterGetKVStoreStateResponse_Row::MasterGetKVStoreStateResponse_Row(const MasterGetKVStoreStateResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MasterGetKVStoreStateResponse_Row* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){from._impl_.columns_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.MasterGetKVStoreStateResponse.Row)
}

inline void MasterGetKVStoreStateResponse_Row::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MasterGetKVStoreStateResponse_Row::~MasterGetKVStoreStateResponse_Row() {
  // @@protoc_insertion_point(destructor:backend.MasterGetKVStoreStateResponse.Row)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MasterGetKVStoreStateResponse_Row::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.columns_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void MasterGetKVStoreStateResponse_Row::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MasterGetKVStoreStateResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.MasterGetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterGetKVStoreStateResponse_Row::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.MasterGetKVStoreStateResponse.Row.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.MasterGetKVStoreStateResponse.Row.Column columns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_columns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MasterGetKVStoreStateResponse_Row::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.MasterGetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.MasterGetKVStoreStateResponse.Row.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .backend.MasterGetKVStoreStateResponse.Row.Column columns = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_columns_size()); i < n; i++) {
    const auto& repfield = this->_internal_columns(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.MasterGetKVStoreStateResponse.Row)
  return target;
}

size_t MasterGetKVStoreStateResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.MasterGetKVStoreStateResponse.Row)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.MasterGetKVStoreStateResponse.Row.Column columns = 2;
  total_size += 1UL * this->_internal_columns_size();
  for (const auto& msg : this->_impl_.columns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterGetKVStoreStateResponse_Row::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MasterGetKVStoreStateResponse_Row::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterGetKVStoreStateResponse_Row::GetClassData() const { return &_class_data_; }


void MasterGetKVStoreStateResponse_Row::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MasterGetKVStoreStateResponse_Row*>(&to_msg);
  auto& from = static_cast<const MasterGetKVStoreStateResponse_Row&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.MasterGetKVStoreStateResponse.Row)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.columns_.MergeFrom(from._impl_.columns_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MasterGetKVStoreStateResponse_Row::CopyFrom(const MasterGetKVStoreStateResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.MasterGetKVStoreStateResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterGetKVStoreStateResponse_Row::IsInitialized() const {
  return true;
}

void MasterGetKVStoreStateResponse_Row::InternalSwap(MasterGetKVStoreStateResponse_Row* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterGetKVStoreStateResponse_Row::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[7]);
}

// ===================================================================

class MasterGetKVStoreStateResponse::_Internal {
 public:
};

MasterGetKVStoreStateResponse::MasterGetKVStoreStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.MasterGetKVStoreStateResponse)
}
MasterGetKVStoreStateResponse::MasterGetKVStoreStateResponse(const MasterGetKVStoreStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MasterGetKVStoreStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){from._impl_.rows_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.MasterGetKVStoreStateResponse)
}

inline void MasterGetKVStoreStateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MasterGetKVStoreStateResponse::~MasterGetKVStoreStateResponse() {
  // @@protoc_insertion_point(destructor:backend.MasterGetKVStoreStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MasterGetKVStoreStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rows_.~RepeatedPtrField();
}

void MasterGetKVStoreStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MasterGetKVStoreStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.MasterGetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rows_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterGetKVStoreStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.MasterGetKVStoreStateResponse.Row rows = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MasterGetKVStoreStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.MasterGetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.MasterGetKVStoreStateResponse.Row rows = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rows_size()); i < n; i++) {
    const auto& repfield = this->_internal_rows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.MasterGetKVStoreStateResponse)
  return target;
}

size_t MasterGetKVStoreStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.MasterGetKVStoreStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.MasterGetKVStoreStateResponse.Row rows = 1;
  total_size += 1UL * this->_internal_rows_size();
  for (const auto& msg : this->_impl_.rows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterGetKVStoreStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MasterGetKVStoreStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterGetKVStoreStateResponse::GetClassData() const { return &_class_data_; }


void MasterGetKVStoreStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MasterGetKVStoreStateResponse*>(&to_msg);
  auto& from = static_cast<const MasterGetKVStoreStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.MasterGetKVStoreStateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rows_.MergeFrom(from._impl_.rows_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MasterGetKVStoreStateResponse::CopyFrom(const MasterGetKVStoreStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.MasterGetKVStoreStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterGetKVStoreStateResponse::IsInitialized() const {
  return true;
}

void MasterGetKVStoreStateResponse::InternalSwap(MasterGetKVStoreStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rows_.InternalSwap(&other->_impl_.rows_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterGetKVStoreStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[8]);
}

// ===================================================================

class KillStorageServerRequest::_Internal {
 public:
};

KillStorageServerRequest::KillStorageServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.KillStorageServerRequest)
}
KillStorageServerRequest::KillStorageServerRequest(const KillStorageServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  KillStorageServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.KillStorageServerRequest)
}

inline void KillStorageServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

KillStorageServerRequest::~KillStorageServerRequest() {
  // @@protoc_insertion_point(destructor:backend.KillStorageServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void KillStorageServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void KillStorageServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void KillStorageServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.KillStorageServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KillStorageServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.KillStorageServerRequest.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KillStorageServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.KillStorageServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.KillStorageServerRequest.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.KillStorageServerRequest)
  return target;
}

size_t KillStorageServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.KillStorageServerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KillStorageServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    KillStorageServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KillStorageServerRequest::GetClassData() const { return &_class_data_; }


void KillStorageServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<KillStorageServerRequest*>(&to_msg);
  auto& from = static_cast<const KillStorageServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.KillStorageServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KillStorageServerRequest::CopyFrom(const KillStorageServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.KillStorageServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillStorageServerRequest::IsInitialized() const {
  return true;
}

void KillStorageServerRequest::InternalSwap(KillStorageServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata KillStorageServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[9]);
}

// ===================================================================

class IsInitialStorageServerStartupRequest::_Internal {
 public:
};

IsInitialStorageServerStartupRequest::IsInitialStorageServerStartupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.IsInitialStorageServerStartupRequest)
}
IsInitialStorageServerStartupRequest::IsInitialStorageServerStartupRequest(const IsInitialStorageServerStartupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IsInitialStorageServerStartupRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.IsInitialStorageServerStartupRequest)
}

inline void IsInitialStorageServerStartupRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

IsInitialStorageServerStartupRequest::~IsInitialStorageServerStartupRequest() {
  // @@protoc_insertion_point(destructor:backend.IsInitialStorageServerStartupRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsInitialStorageServerStartupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void IsInitialStorageServerStartupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IsInitialStorageServerStartupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.IsInitialStorageServerStartupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsInitialStorageServerStartupRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.IsInitialStorageServerStartupRequest.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsInitialStorageServerStartupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.IsInitialStorageServerStartupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.IsInitialStorageServerStartupRequest.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.IsInitialStorageServerStartupRequest)
  return target;
}

size_t IsInitialStorageServerStartupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.IsInitialStorageServerStartupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsInitialStorageServerStartupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IsInitialStorageServerStartupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsInitialStorageServerStartupRequest::GetClassData() const { return &_class_data_; }


void IsInitialStorageServerStartupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IsInitialStorageServerStartupRequest*>(&to_msg);
  auto& from = static_cast<const IsInitialStorageServerStartupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.IsInitialStorageServerStartupRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsInitialStorageServerStartupRequest::CopyFrom(const IsInitialStorageServerStartupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.IsInitialStorageServerStartupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsInitialStorageServerStartupRequest::IsInitialized() const {
  return true;
}

void IsInitialStorageServerStartupRequest::InternalSwap(IsInitialStorageServerStartupRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata IsInitialStorageServerStartupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[10]);
}

// ===================================================================

class IsInitialStorageServerStartupResponse::_Internal {
 public:
};

IsInitialStorageServerStartupResponse::IsInitialStorageServerStartupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.IsInitialStorageServerStartupResponse)
}
IsInitialStorageServerStartupResponse::IsInitialStorageServerStartupResponse(const IsInitialStorageServerStartupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IsInitialStorageServerStartupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_initial_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_initial_ = from._impl_.is_initial_;
  // @@protoc_insertion_point(copy_constructor:backend.IsInitialStorageServerStartupResponse)
}

inline void IsInitialStorageServerStartupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_initial_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IsInitialStorageServerStartupResponse::~IsInitialStorageServerStartupResponse() {
  // @@protoc_insertion_point(destructor:backend.IsInitialStorageServerStartupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IsInitialStorageServerStartupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IsInitialStorageServerStartupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IsInitialStorageServerStartupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.IsInitialStorageServerStartupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_initial_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IsInitialStorageServerStartupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_initial = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_initial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IsInitialStorageServerStartupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.IsInitialStorageServerStartupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_initial = 1;
  if (this->_internal_is_initial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_initial(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.IsInitialStorageServerStartupResponse)
  return target;
}

size_t IsInitialStorageServerStartupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.IsInitialStorageServerStartupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_initial = 1;
  if (this->_internal_is_initial() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IsInitialStorageServerStartupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IsInitialStorageServerStartupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IsInitialStorageServerStartupResponse::GetClassData() const { return &_class_data_; }


void IsInitialStorageServerStartupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IsInitialStorageServerStartupResponse*>(&to_msg);
  auto& from = static_cast<const IsInitialStorageServerStartupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.IsInitialStorageServerStartupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_initial() != 0) {
    _this->_internal_set_is_initial(from._internal_is_initial());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IsInitialStorageServerStartupResponse::CopyFrom(const IsInitialStorageServerStartupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.IsInitialStorageServerStartupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsInitialStorageServerStartupResponse::IsInitialized() const {
  return true;
}

void IsInitialStorageServerStartupResponse::InternalSwap(IsInitialStorageServerStartupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_initial_, other->_impl_.is_initial_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IsInitialStorageServerStartupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[11]);
}

// ===================================================================

class GetStorageServerStatusesRequest::_Internal {
 public:
};

GetStorageServerStatusesRequest::GetStorageServerStatusesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.GetStorageServerStatusesRequest)
}
GetStorageServerStatusesRequest::GetStorageServerStatusesRequest(const GetStorageServerStatusesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetStorageServerStatusesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetStorageServerStatusesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStorageServerStatusesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStorageServerStatusesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetStorageServerStatusesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[12]);
}

// ===================================================================

class GetStorageServerStatusesResponse_ServerStatus::_Internal {
 public:
};

GetStorageServerStatusesResponse_ServerStatus::GetStorageServerStatusesResponse_ServerStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetStorageServerStatusesResponse.ServerStatus)
}
GetStorageServerStatusesResponse_ServerStatus::GetStorageServerStatusesResponse_ServerStatus(const GetStorageServerStatusesResponse_ServerStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStorageServerStatusesResponse_ServerStatus* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.is_alive_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_alive_ = from._impl_.is_alive_;
  // @@protoc_insertion_point(copy_constructor:backend.GetStorageServerStatusesResponse.ServerStatus)
}

inline void GetStorageServerStatusesResponse_ServerStatus::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.is_alive_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStorageServerStatusesResponse_ServerStatus::~GetStorageServerStatusesResponse_ServerStatus() {
  // @@protoc_insertion_point(destructor:backend.GetStorageServerStatusesResponse.ServerStatus)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStorageServerStatusesResponse_ServerStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void GetStorageServerStatusesResponse_ServerStatus::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStorageServerStatusesResponse_ServerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetStorageServerStatusesResponse.ServerStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.is_alive_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStorageServerStatusesResponse_ServerStatus::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetStorageServerStatusesResponse.ServerStatus.address"));
        } else
          goto handle_unusual;
        continue;
      // bool is_alive = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.is_alive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStorageServerStatusesResponse_ServerStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetStorageServerStatusesResponse.ServerStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetStorageServerStatusesResponse.ServerStatus.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // bool is_alive = 2;
  if (this->_internal_is_alive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_is_alive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetStorageServerStatusesResponse.ServerStatus)
  return target;
}

size_t GetStorageServerStatusesResponse_ServerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetStorageServerStatusesResponse.ServerStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // bool is_alive = 2;
  if (this->_internal_is_alive() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStorageServerStatusesResponse_ServerStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStorageServerStatusesResponse_ServerStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStorageServerStatusesResponse_ServerStatus::GetClassData() const { return &_class_data_; }


void GetStorageServerStatusesResponse_ServerStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStorageServerStatusesResponse_ServerStatus*>(&to_msg);
  auto& from = static_cast<const GetStorageServerStatusesResponse_ServerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetStorageServerStatusesResponse.ServerStatus)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_is_alive() != 0) {
    _this->_internal_set_is_alive(from._internal_is_alive());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStorageServerStatusesResponse_ServerStatus::CopyFrom(const GetStorageServerStatusesResponse_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetStorageServerStatusesResponse.ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStorageServerStatusesResponse_ServerStatus::IsInitialized() const {
  return true;
}

void GetStorageServerStatusesResponse_ServerStatus::InternalSwap(GetStorageServerStatusesResponse_ServerStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  swap(_impl_.is_alive_, other->_impl_.is_alive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStorageServerStatusesResponse_ServerStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[13]);
}

// ===================================================================

class GetStorageServerStatusesResponse::_Internal {
 public:
};

GetStorageServerStatusesResponse::GetStorageServerStatusesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetStorageServerStatusesResponse)
}
GetStorageServerStatusesResponse::GetStorageServerStatusesResponse(const GetStorageServerStatusesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStorageServerStatusesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.statuses_){from._impl_.statuses_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetStorageServerStatusesResponse)
}

inline void GetStorageServerStatusesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.statuses_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetStorageServerStatusesResponse::~GetStorageServerStatusesResponse() {
  // @@protoc_insertion_point(destructor:backend.GetStorageServerStatusesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStorageServerStatusesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.statuses_.~RepeatedPtrField();
}

void GetStorageServerStatusesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStorageServerStatusesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetStorageServerStatusesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.statuses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStorageServerStatusesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.GetStorageServerStatusesResponse.ServerStatus statuses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_statuses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStorageServerStatusesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetStorageServerStatusesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.GetStorageServerStatusesResponse.ServerStatus statuses = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_statuses_size()); i < n; i++) {
    const auto& repfield = this->_internal_statuses(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetStorageServerStatusesResponse)
  return target;
}

size_t GetStorageServerStatusesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetStorageServerStatusesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetStorageServerStatusesResponse.ServerStatus statuses = 1;
  total_size += 1UL * this->_internal_statuses_size();
  for (const auto& msg : this->_impl_.statuses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStorageServerStatusesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStorageServerStatusesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStorageServerStatusesResponse::GetClassData() const { return &_class_data_; }


void GetStorageServerStatusesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStorageServerStatusesResponse*>(&to_msg);
  auto& from = static_cast<const GetStorageServerStatusesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetStorageServerStatusesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.statuses_.MergeFrom(from._impl_.statuses_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStorageServerStatusesResponse::CopyFrom(const GetStorageServerStatusesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetStorageServerStatusesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStorageServerStatusesResponse::IsInitialized() const {
  return true;
}

void GetStorageServerStatusesResponse::InternalSwap(GetStorageServerStatusesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.statuses_.InternalSwap(&other->_impl_.statuses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStorageServerStatusesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace backend
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::backend::GetTabletsUserRequest*
Arena::CreateMaybeMessage< ::backend::GetTabletsUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsServerRequest*
Arena::CreateMaybeMessage< ::backend::GetTabletsServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsUserResponse_TabletGroup_ServerInfo*
Arena::CreateMaybeMessage< ::backend::GetTabletsUserResponse_TabletGroup_ServerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsUserResponse_TabletGroup_ServerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsUserResponse_TabletGroup*
Arena::CreateMaybeMessage< ::backend::GetTabletsUserResponse_TabletGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsUserResponse_TabletGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsUserResponse*
Arena::CreateMaybeMessage< ::backend::GetTabletsUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::MasterEmpty*
Arena::CreateMaybeMessage< ::backend::MasterEmpty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::MasterEmpty >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::MasterGetKVStoreStateResponse_Row_Column*
Arena::CreateMaybeMessage< ::backend::MasterGetKVStoreStateResponse_Row_Column >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::MasterGetKVStoreStateResponse_Row_Column >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::MasterGetKVStoreStateResponse_Row*
Arena::CreateMaybeMessage< ::backend::MasterGetKVStoreStateResponse_Row >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::MasterGetKVStoreStateResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::MasterGetKVStoreStateResponse*
Arena::CreateMaybeMessage< ::backend::MasterGetKVStoreStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::MasterGetKVStoreStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::KillStorageServerRequest*
Arena::CreateMaybeMessage< ::backend::KillStorageServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::KillStorageServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::IsInitialStorageServerStartupRequest*
Arena::CreateMaybeMessage< ::backend::IsInitialStorageServerStartupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::IsInitialStorageServerStartupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::IsInitialStorageServerStartupResponse*
Arena::CreateMaybeMessage< ::backend::IsInitialStorageServerStartupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::IsInitialStorageServerStartupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetStorageServerStatusesRequest*
Arena::CreateMaybeMessage< ::backend::GetStorageServerStatusesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetStorageServerStatusesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetStorageServerStatusesResponse_ServerStatus*
Arena::CreateMaybeMessage< ::backend::GetStorageServerStatusesResponse_ServerStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetStorageServerStatusesResponse_ServerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetStorageServerStatusesResponse*
Arena::CreateMaybeMessage< ::backend::GetStorageServerStatusesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetStorageServerStatusesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
