// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storageserver.proto

#include "storageserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace backend {
PROTOBUF_CONSTEXPR PushStorageTabletsRequest_TabletGroup_ServerInfo::PushStorageTabletsRequest_TabletGroup_ServerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.primary_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PushStorageTabletsRequest_TabletGroup_ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushStorageTabletsRequest_TabletGroup_ServerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushStorageTabletsRequest_TabletGroup_ServerInfoDefaultTypeInternal() {}
  union {
    PushStorageTabletsRequest_TabletGroup_ServerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushStorageTabletsRequest_TabletGroup_ServerInfoDefaultTypeInternal _PushStorageTabletsRequest_TabletGroup_ServerInfo_default_instance_;
PROTOBUF_CONSTEXPR PushStorageTabletsRequest_TabletGroup::PushStorageTabletsRequest_TabletGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servers_)*/{}
  , /*decltype(_impl_.begin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.end_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PushStorageTabletsRequest_TabletGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushStorageTabletsRequest_TabletGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushStorageTabletsRequest_TabletGroupDefaultTypeInternal() {}
  union {
    PushStorageTabletsRequest_TabletGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushStorageTabletsRequest_TabletGroupDefaultTypeInternal _PushStorageTabletsRequest_TabletGroup_default_instance_;
PROTOBUF_CONSTEXPR PushStorageTabletsRequest::PushStorageTabletsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablets_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PushStorageTabletsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushStorageTabletsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushStorageTabletsRequestDefaultTypeInternal() {}
  union {
    PushStorageTabletsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushStorageTabletsRequestDefaultTypeInternal _PushStorageTabletsRequest_default_instance_;
PROTOBUF_CONSTEXPR StorageServerRequest::StorageServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.row_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.col_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value1_bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value2_bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_bytes_)*/false
  , /*decltype(_impl_.from_primary_)*/false
  , /*decltype(_impl_.sequence_number_)*/0} {}
struct StorageServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageServerRequestDefaultTypeInternal() {}
  union {
    StorageServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageServerRequestDefaultTypeInternal _StorageServerRequest_default_instance_;
PROTOBUF_CONSTEXPR StorageServerResponse::StorageServerResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_bytes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct StorageServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageServerResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageServerResponseDefaultTypeInternal() {}
  union {
    StorageServerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageServerResponseDefaultTypeInternal _StorageServerResponse_default_instance_;
PROTOBUF_CONSTEXPR StorageEmpty::StorageEmpty(
    ::_pbi::ConstantInitialized) {}
struct StorageEmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageEmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageEmptyDefaultTypeInternal() {}
  union {
    StorageEmpty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageEmptyDefaultTypeInternal _StorageEmpty_default_instance_;
PROTOBUF_CONSTEXPR StorageGetKVStoreStateRequest::StorageGetKVStoreStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageGetKVStoreStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageGetKVStoreStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageGetKVStoreStateRequestDefaultTypeInternal() {}
  union {
    StorageGetKVStoreStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageGetKVStoreStateRequestDefaultTypeInternal _StorageGetKVStoreStateRequest_default_instance_;
PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponse_Row_Column::StorageGetKVStoreStateResponse_Row_Column(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal() {}
  union {
    StorageGetKVStoreStateResponse_Row_Column _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageGetKVStoreStateResponse_Row_ColumnDefaultTypeInternal _StorageGetKVStoreStateResponse_Row_Column_default_instance_;
PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponse_Row::StorageGetKVStoreStateResponse_Row(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.columns_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageGetKVStoreStateResponse_RowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponse_RowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageGetKVStoreStateResponse_RowDefaultTypeInternal() {}
  union {
    StorageGetKVStoreStateResponse_Row _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageGetKVStoreStateResponse_RowDefaultTypeInternal _StorageGetKVStoreStateResponse_Row_default_instance_;
PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponse::StorageGetKVStoreStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rows_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StorageGetKVStoreStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageGetKVStoreStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageGetKVStoreStateResponseDefaultTypeInternal() {}
  union {
    StorageGetKVStoreStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageGetKVStoreStateResponseDefaultTypeInternal _StorageGetKVStoreStateResponse_default_instance_;
PROTOBUF_CONSTEXPR RequestLatestTabletStateRequest::RequestLatestTabletStateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablet_range_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.checkpoint_version_)*/0
  , /*decltype(_impl_.log_length_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestLatestTabletStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLatestTabletStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLatestTabletStateRequestDefaultTypeInternal() {}
  union {
    RequestLatestTabletStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLatestTabletStateRequestDefaultTypeInternal _RequestLatestTabletStateRequest_default_instance_;
PROTOBUF_CONSTEXPR RequestLatestTabletStateResponse::RequestLatestTabletStateResponse(
    ::_pbi::ConstantInitialized) {}
struct RequestLatestTabletStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLatestTabletStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLatestTabletStateResponseDefaultTypeInternal() {}
  union {
    RequestLatestTabletStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLatestTabletStateResponseDefaultTypeInternal _RequestLatestTabletStateResponse_default_instance_;
PROTOBUF_CONSTEXPR PushCheckpointPartitionRequest::PushCheckpointPartitionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablet_range_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.checkpoint_version_)*/0
  , /*decltype(_impl_.is_last_partition_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PushCheckpointPartitionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushCheckpointPartitionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushCheckpointPartitionRequestDefaultTypeInternal() {}
  union {
    PushCheckpointPartitionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushCheckpointPartitionRequestDefaultTypeInternal _PushCheckpointPartitionRequest_default_instance_;
PROTOBUF_CONSTEXPR PushCheckpointPartitionResponse::PushCheckpointPartitionResponse(
    ::_pbi::ConstantInitialized) {}
struct PushCheckpointPartitionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushCheckpointPartitionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushCheckpointPartitionResponseDefaultTypeInternal() {}
  union {
    PushCheckpointPartitionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushCheckpointPartitionResponseDefaultTypeInternal _PushCheckpointPartitionResponse_default_instance_;
PROTOBUF_CONSTEXPR PushLogRequest::PushLogRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablet_range_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PushLogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushLogRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushLogRequestDefaultTypeInternal() {}
  union {
    PushLogRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushLogRequestDefaultTypeInternal _PushLogRequest_default_instance_;
PROTOBUF_CONSTEXPR PushLogResponse::PushLogResponse(
    ::_pbi::ConstantInitialized) {}
struct PushLogResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushLogResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushLogResponseDefaultTypeInternal() {}
  union {
    PushLogResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushLogResponseDefaultTypeInternal _PushLogResponse_default_instance_;
}  // namespace backend
static ::_pb::Metadata file_level_metadata_storageserver_2eproto[16];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_storageserver_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_storageserver_2eproto = nullptr;

const uint32_t TableStruct_storageserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo, _impl_.primary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup, _impl_.begin_),
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup, _impl_.end_),
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest_TabletGroup, _impl_.servers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::PushStorageTabletsRequest, _impl_.tablets_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.row_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.col_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.is_bytes_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.value1_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.value2_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.value1_bytes_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.value2_bytes_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.from_primary_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerRequest, _impl_.sequence_number_),
  ~0u,
  ~0u,
  4,
  0,
  1,
  2,
  3,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerResponse, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageServerResponse, _impl_.value_bytes_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::StorageEmpty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateRequest, _impl_.key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row_Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row_Column, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row_Column, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse_Row, _impl_.columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::StorageGetKVStoreStateResponse, _impl_.rows_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateRequest, _impl_.tablet_range_),
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateRequest, _impl_.checkpoint_version_),
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateRequest, _impl_.log_length_),
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::RequestLatestTabletStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionRequest, _impl_.checkpoint_version_),
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionRequest, _impl_.tablet_range_),
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionRequest, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionRequest, _impl_.is_last_partition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushCheckpointPartitionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::PushLogRequest, _impl_.tablet_range_),
  PROTOBUF_FIELD_OFFSET(::backend::PushLogRequest, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::PushLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo)},
  { 8, -1, -1, sizeof(::backend::PushStorageTabletsRequest_TabletGroup)},
  { 17, -1, -1, sizeof(::backend::PushStorageTabletsRequest)},
  { 24, 39, -1, sizeof(::backend::StorageServerRequest)},
  { 48, 56, -1, sizeof(::backend::StorageServerResponse)},
  { 58, -1, -1, sizeof(::backend::StorageEmpty)},
  { 64, -1, -1, sizeof(::backend::StorageGetKVStoreStateRequest)},
  { 71, -1, -1, sizeof(::backend::StorageGetKVStoreStateResponse_Row_Column)},
  { 79, -1, -1, sizeof(::backend::StorageGetKVStoreStateResponse_Row)},
  { 87, -1, -1, sizeof(::backend::StorageGetKVStoreStateResponse)},
  { 94, -1, -1, sizeof(::backend::RequestLatestTabletStateRequest)},
  { 104, -1, -1, sizeof(::backend::RequestLatestTabletStateResponse)},
  { 110, -1, -1, sizeof(::backend::PushCheckpointPartitionRequest)},
  { 120, -1, -1, sizeof(::backend::PushCheckpointPartitionResponse)},
  { 126, -1, -1, sizeof(::backend::PushLogRequest)},
  { 134, -1, -1, sizeof(::backend::PushLogResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::backend::_PushStorageTabletsRequest_TabletGroup_ServerInfo_default_instance_._instance,
  &::backend::_PushStorageTabletsRequest_TabletGroup_default_instance_._instance,
  &::backend::_PushStorageTabletsRequest_default_instance_._instance,
  &::backend::_StorageServerRequest_default_instance_._instance,
  &::backend::_StorageServerResponse_default_instance_._instance,
  &::backend::_StorageEmpty_default_instance_._instance,
  &::backend::_StorageGetKVStoreStateRequest_default_instance_._instance,
  &::backend::_StorageGetKVStoreStateResponse_Row_Column_default_instance_._instance,
  &::backend::_StorageGetKVStoreStateResponse_Row_default_instance_._instance,
  &::backend::_StorageGetKVStoreStateResponse_default_instance_._instance,
  &::backend::_RequestLatestTabletStateRequest_default_instance_._instance,
  &::backend::_RequestLatestTabletStateResponse_default_instance_._instance,
  &::backend::_PushCheckpointPartitionRequest_default_instance_._instance,
  &::backend::_PushCheckpointPartitionResponse_default_instance_._instance,
  &::backend::_PushLogRequest_default_instance_._instance,
  &::backend::_PushLogResponse_default_instance_._instance,
};

const char descriptor_table_protodef_storageserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023storageserver.proto\022\007backend\"\204\002\n\031PushS"
  "torageTabletsRequest\022\?\n\007tablets\030\001 \003(\0132.."
  "backend.PushStorageTabletsRequest.Tablet"
  "Group\032\245\001\n\013TabletGroup\022\r\n\005begin\030\001 \001(\t\022\013\n\003"
  "end\030\002 \001(\t\022J\n\007servers\030\003 \003(\01329.backend.Pus"
  "hStorageTabletsRequest.TabletGroup.Serve"
  "rInfo\032.\n\nServerInfo\022\017\n\007address\030\001 \001(\t\022\017\n\007"
  "primary\030\002 \001(\010\"\264\002\n\024StorageServerRequest\022\013"
  "\n\003row\030\001 \001(\t\022\013\n\003col\030\002 \001(\t\022\025\n\010is_bytes\030\003 \001"
  "(\010H\000\210\001\001\022\023\n\006value1\030\004 \001(\tH\001\210\001\001\022\023\n\006value2\030\005"
  " \001(\tH\002\210\001\001\022\031\n\014value1_bytes\030\006 \001(\014H\003\210\001\001\022\031\n\014"
  "value2_bytes\030\007 \001(\014H\004\210\001\001\022\024\n\014from_primary\030"
  "\010 \001(\010\022\034\n\017sequence_number\030\t \001(\005H\005\210\001\001B\013\n\t_"
  "is_bytesB\t\n\007_value1B\t\n\007_value2B\017\n\r_value"
  "1_bytesB\017\n\r_value2_bytesB\022\n\020_sequence_nu"
  "mber\"_\n\025StorageServerResponse\022\022\n\005value\030\001"
  " \001(\tH\000\210\001\001\022\030\n\013value_bytes\030\002 \001(\014H\001\210\001\001B\010\n\006_"
  "valueB\016\n\014_value_bytes\"\016\n\014StorageEmpty\",\n"
  "\035StorageGetKVStoreStateRequest\022\013\n\003key\030\001 "
  "\001(\t\"\333\001\n\036StorageGetKVStoreStateResponse\0229"
  "\n\004rows\030\001 \003(\0132+.backend.StorageGetKVStore"
  "StateResponse.Row\032~\n\003Row\022\014\n\004name\030\001 \001(\t\022C"
  "\n\007columns\030\002 \003(\01322.backend.StorageGetKVSt"
  "oreStateResponse.Row.Column\032$\n\006Column\022\014\n"
  "\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"x\n\037RequestLate"
  "stTabletStateRequest\022\024\n\014tablet_range\030\001 \001"
  "(\t\022\032\n\022checkpoint_version\030\002 \001(\005\022\022\n\nlog_le"
  "ngth\030\003 \001(\005\022\017\n\007address\030\004 \001(\t\"\"\n RequestLa"
  "testTabletStateResponse\"~\n\036PushCheckpoin"
  "tPartitionRequest\022\032\n\022checkpoint_version\030"
  "\001 \001(\005\022\024\n\014tablet_range\030\002 \001(\t\022\017\n\007content\030\003"
  " \001(\014\022\031\n\021is_last_partition\030\004 \001(\010\"!\n\037PushC"
  "heckpointPartitionResponse\"7\n\016PushLogReq"
  "uest\022\024\n\014tablet_range\030\001 \001(\t\022\017\n\007content\030\002 "
  "\001(\014\"\021\n\017PushLogResponse2\362\007\n\rStorageServer"
  "\022Z\n\022PushStorageTablets\022\".backend.PushSto"
  "rageTabletsRequest\032\036.backend.StorageServ"
  "erResponse\"\000\022M\n\nStorageGet\022\035.backend.Sto"
  "rageServerRequest\032\036.backend.StorageServe"
  "rResponse\"\000\022M\n\nStoragePut\022\035.backend.Stor"
  "ageServerRequest\032\036.backend.StorageServer"
  "Response\"\000\022N\n\013StorageCPut\022\035.backend.Stor"
  "ageServerRequest\032\036.backend.StorageServer"
  "Response\"\000\022P\n\rStorageDelete\022\035.backend.St"
  "orageServerRequest\032\036.backend.StorageServ"
  "erResponse\"\000\022<\n\nKillServer\022\025.backend.Sto"
  "rageEmpty\032\025.backend.StorageEmpty\"\000\022>\n\014Re"
  "viveServer\022\025.backend.StorageEmpty\032\025.back"
  "end.StorageEmpty\"\000\022d\n\017GetKVStoreState\022&."
  "backend.StorageGetKVStoreStateRequest\032\'."
  "backend.StorageGetKVStoreStateResponse\"\000"
  "\022q\n\030RequestLatestTabletState\022(.backend.R"
  "equestLatestTabletStateRequest\032).backend"
  ".RequestLatestTabletStateResponse\"\000\022p\n\027P"
  "ushCheckpointPartition\022\'.backend.PushChe"
  "ckpointPartitionRequest\032(.backend.PushCh"
  "eckpointPartitionResponse\"\000(\001\022>\n\007PushLog"
  "\022\027.backend.PushLogRequest\032\030.backend.Push"
  "LogResponse\"\000\022<\n\nPulseCheck\022\025.backend.St"
  "orageEmpty\032\025.backend.StorageEmpty\"\000b\006pro"
  "to3"
  ;
static ::_pbi::once_flag descriptor_table_storageserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_storageserver_2eproto = {
    false, false, 2403, descriptor_table_protodef_storageserver_2eproto,
    "storageserver.proto",
    &descriptor_table_storageserver_2eproto_once, nullptr, 0, 16,
    schemas, file_default_instances, TableStruct_storageserver_2eproto::offsets,
    file_level_metadata_storageserver_2eproto, file_level_enum_descriptors_storageserver_2eproto,
    file_level_service_descriptors_storageserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_storageserver_2eproto_getter() {
  return &descriptor_table_storageserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_storageserver_2eproto(&descriptor_table_storageserver_2eproto);
namespace backend {

// ===================================================================

class PushStorageTabletsRequest_TabletGroup_ServerInfo::_Internal {
 public:
};

PushStorageTabletsRequest_TabletGroup_ServerInfo::PushStorageTabletsRequest_TabletGroup_ServerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
}
PushStorageTabletsRequest_TabletGroup_ServerInfo::PushStorageTabletsRequest_TabletGroup_ServerInfo(const PushStorageTabletsRequest_TabletGroup_ServerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushStorageTabletsRequest_TabletGroup_ServerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.primary_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.primary_ = from._impl_.primary_;
  // @@protoc_insertion_point(copy_constructor:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
}

inline void PushStorageTabletsRequest_TabletGroup_ServerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.primary_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PushStorageTabletsRequest_TabletGroup_ServerInfo::~PushStorageTabletsRequest_TabletGroup_ServerInfo() {
  // @@protoc_insertion_point(destructor:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushStorageTabletsRequest_TabletGroup_ServerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void PushStorageTabletsRequest_TabletGroup_ServerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushStorageTabletsRequest_TabletGroup_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.primary_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushStorageTabletsRequest_TabletGroup_ServerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.PushStorageTabletsRequest.TabletGroup.ServerInfo.address"));
        } else
          goto handle_unusual;
        continue;
      // bool primary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.primary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushStorageTabletsRequest_TabletGroup_ServerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.PushStorageTabletsRequest.TabletGroup.ServerInfo.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // bool primary = 2;
  if (this->_internal_primary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_primary(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  return target;
}

size_t PushStorageTabletsRequest_TabletGroup_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // bool primary = 2;
  if (this->_internal_primary() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushStorageTabletsRequest_TabletGroup_ServerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushStorageTabletsRequest_TabletGroup_ServerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushStorageTabletsRequest_TabletGroup_ServerInfo::GetClassData() const { return &_class_data_; }


void PushStorageTabletsRequest_TabletGroup_ServerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushStorageTabletsRequest_TabletGroup_ServerInfo*>(&to_msg);
  auto& from = static_cast<const PushStorageTabletsRequest_TabletGroup_ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_primary() != 0) {
    _this->_internal_set_primary(from._internal_primary());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushStorageTabletsRequest_TabletGroup_ServerInfo::CopyFrom(const PushStorageTabletsRequest_TabletGroup_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.PushStorageTabletsRequest.TabletGroup.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushStorageTabletsRequest_TabletGroup_ServerInfo::IsInitialized() const {
  return true;
}

void PushStorageTabletsRequest_TabletGroup_ServerInfo::InternalSwap(PushStorageTabletsRequest_TabletGroup_ServerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  swap(_impl_.primary_, other->_impl_.primary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PushStorageTabletsRequest_TabletGroup_ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[0]);
}

// ===================================================================

class PushStorageTabletsRequest_TabletGroup::_Internal {
 public:
};

PushStorageTabletsRequest_TabletGroup::PushStorageTabletsRequest_TabletGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.PushStorageTabletsRequest.TabletGroup)
}
PushStorageTabletsRequest_TabletGroup::PushStorageTabletsRequest_TabletGroup(const PushStorageTabletsRequest_TabletGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushStorageTabletsRequest_TabletGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){from._impl_.servers_}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_begin().empty()) {
    _this->_impl_.begin_.Set(from._internal_begin(), 
      _this->GetArenaForAllocation());
  }
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end().empty()) {
    _this->_impl_.end_.Set(from._internal_end(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.PushStorageTabletsRequest.TabletGroup)
}

inline void PushStorageTabletsRequest_TabletGroup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){arena}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PushStorageTabletsRequest_TabletGroup::~PushStorageTabletsRequest_TabletGroup() {
  // @@protoc_insertion_point(destructor:backend.PushStorageTabletsRequest.TabletGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushStorageTabletsRequest_TabletGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servers_.~RepeatedPtrField();
  _impl_.begin_.Destroy();
  _impl_.end_.Destroy();
}

void PushStorageTabletsRequest_TabletGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushStorageTabletsRequest_TabletGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.PushStorageTabletsRequest.TabletGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servers_.Clear();
  _impl_.begin_.ClearToEmpty();
  _impl_.end_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushStorageTabletsRequest_TabletGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string begin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_begin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.PushStorageTabletsRequest.TabletGroup.begin"));
        } else
          goto handle_unusual;
        continue;
      // string end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_end();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.PushStorageTabletsRequest.TabletGroup.end"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.PushStorageTabletsRequest.TabletGroup.ServerInfo servers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_servers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushStorageTabletsRequest_TabletGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.PushStorageTabletsRequest.TabletGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_begin().data(), static_cast<int>(this->_internal_begin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.PushStorageTabletsRequest.TabletGroup.begin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_begin(), target);
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end().data(), static_cast<int>(this->_internal_end().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.PushStorageTabletsRequest.TabletGroup.end");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_end(), target);
  }

  // repeated .backend.PushStorageTabletsRequest.TabletGroup.ServerInfo servers = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_servers_size()); i < n; i++) {
    const auto& repfield = this->_internal_servers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.PushStorageTabletsRequest.TabletGroup)
  return target;
}

size_t PushStorageTabletsRequest_TabletGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.PushStorageTabletsRequest.TabletGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.PushStorageTabletsRequest.TabletGroup.ServerInfo servers = 3;
  total_size += 1UL * this->_internal_servers_size();
  for (const auto& msg : this->_impl_.servers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_begin());
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushStorageTabletsRequest_TabletGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushStorageTabletsRequest_TabletGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushStorageTabletsRequest_TabletGroup::GetClassData() const { return &_class_data_; }


void PushStorageTabletsRequest_TabletGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushStorageTabletsRequest_TabletGroup*>(&to_msg);
  auto& from = static_cast<const PushStorageTabletsRequest_TabletGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.PushStorageTabletsRequest.TabletGroup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.servers_.MergeFrom(from._impl_.servers_);
  if (!from._internal_begin().empty()) {
    _this->_internal_set_begin(from._internal_begin());
  }
  if (!from._internal_end().empty()) {
    _this->_internal_set_end(from._internal_end());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushStorageTabletsRequest_TabletGroup::CopyFrom(const PushStorageTabletsRequest_TabletGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.PushStorageTabletsRequest.TabletGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushStorageTabletsRequest_TabletGroup::IsInitialized() const {
  return true;
}

void PushStorageTabletsRequest_TabletGroup::InternalSwap(PushStorageTabletsRequest_TabletGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.servers_.InternalSwap(&other->_impl_.servers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.begin_, lhs_arena,
      &other->_impl_.begin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.end_, lhs_arena,
      &other->_impl_.end_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PushStorageTabletsRequest_TabletGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[1]);
}

// ===================================================================

class PushStorageTabletsRequest::_Internal {
 public:
};

PushStorageTabletsRequest::PushStorageTabletsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.PushStorageTabletsRequest)
}
PushStorageTabletsRequest::PushStorageTabletsRequest(const PushStorageTabletsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushStorageTabletsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){from._impl_.tablets_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.PushStorageTabletsRequest)
}

inline void PushStorageTabletsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PushStorageTabletsRequest::~PushStorageTabletsRequest() {
  // @@protoc_insertion_point(destructor:backend.PushStorageTabletsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushStorageTabletsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablets_.~RepeatedPtrField();
}

void PushStorageTabletsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushStorageTabletsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.PushStorageTabletsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushStorageTabletsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.PushStorageTabletsRequest.TabletGroup tablets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tablets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushStorageTabletsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.PushStorageTabletsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.PushStorageTabletsRequest.TabletGroup tablets = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tablets_size()); i < n; i++) {
    const auto& repfield = this->_internal_tablets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.PushStorageTabletsRequest)
  return target;
}

size_t PushStorageTabletsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.PushStorageTabletsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.PushStorageTabletsRequest.TabletGroup tablets = 1;
  total_size += 1UL * this->_internal_tablets_size();
  for (const auto& msg : this->_impl_.tablets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushStorageTabletsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushStorageTabletsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushStorageTabletsRequest::GetClassData() const { return &_class_data_; }


void PushStorageTabletsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushStorageTabletsRequest*>(&to_msg);
  auto& from = static_cast<const PushStorageTabletsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.PushStorageTabletsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tablets_.MergeFrom(from._impl_.tablets_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushStorageTabletsRequest::CopyFrom(const PushStorageTabletsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.PushStorageTabletsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushStorageTabletsRequest::IsInitialized() const {
  return true;
}

void PushStorageTabletsRequest::InternalSwap(PushStorageTabletsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tablets_.InternalSwap(&other->_impl_.tablets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PushStorageTabletsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[2]);
}

// ===================================================================

class StorageServerRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<StorageServerRequest>()._impl_._has_bits_);
  static void set_has_is_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_value1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_value1_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_value2_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sequence_number(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

StorageServerRequest::StorageServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageServerRequest)
}
StorageServerRequest::StorageServerRequest(const StorageServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.row_){}
    , decltype(_impl_.col_){}
    , decltype(_impl_.value1_){}
    , decltype(_impl_.value2_){}
    , decltype(_impl_.value1_bytes_){}
    , decltype(_impl_.value2_bytes_){}
    , decltype(_impl_.is_bytes_){}
    , decltype(_impl_.from_primary_){}
    , decltype(_impl_.sequence_number_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.row_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.row_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_row().empty()) {
    _this->_impl_.row_.Set(from._internal_row(), 
      _this->GetArenaForAllocation());
  }
  _impl_.col_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.col_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_col().empty()) {
    _this->_impl_.col_.Set(from._internal_col(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value1()) {
    _this->_impl_.value1_.Set(from._internal_value1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value2()) {
    _this->_impl_.value2_.Set(from._internal_value2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value1_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value1_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value1_bytes()) {
    _this->_impl_.value1_bytes_.Set(from._internal_value1_bytes(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value2_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value2_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value2_bytes()) {
    _this->_impl_.value2_bytes_.Set(from._internal_value2_bytes(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_bytes_, &from._impl_.is_bytes_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.sequence_number_) -
    reinterpret_cast<char*>(&_impl_.is_bytes_)) + sizeof(_impl_.sequence_number_));
  // @@protoc_insertion_point(copy_constructor:backend.StorageServerRequest)
}

inline void StorageServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.row_){}
    , decltype(_impl_.col_){}
    , decltype(_impl_.value1_){}
    , decltype(_impl_.value2_){}
    , decltype(_impl_.value1_bytes_){}
    , decltype(_impl_.value2_bytes_){}
    , decltype(_impl_.is_bytes_){false}
    , decltype(_impl_.from_primary_){false}
    , decltype(_impl_.sequence_number_){0}
  };
  _impl_.row_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.row_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.col_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.col_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value1_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value1_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value2_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value2_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageServerRequest::~StorageServerRequest() {
  // @@protoc_insertion_point(destructor:backend.StorageServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.row_.Destroy();
  _impl_.col_.Destroy();
  _impl_.value1_.Destroy();
  _impl_.value2_.Destroy();
  _impl_.value1_bytes_.Destroy();
  _impl_.value2_bytes_.Destroy();
}

void StorageServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.row_.ClearToEmpty();
  _impl_.col_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.value1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.value1_bytes_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.value2_bytes_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.is_bytes_ = false;
  _impl_.from_primary_ = false;
  _impl_.sequence_number_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string row = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_row();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageServerRequest.row"));
        } else
          goto handle_unusual;
        continue;
      // string col = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_col();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageServerRequest.col"));
        } else
          goto handle_unusual;
        continue;
      // optional bool is_bytes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_is_bytes(&has_bits);
          _impl_.is_bytes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string value1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_value1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageServerRequest.value1"));
        } else
          goto handle_unusual;
        continue;
      // optional string value2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_value2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageServerRequest.value2"));
        } else
          goto handle_unusual;
        continue;
      // optional bytes value1_bytes = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_value1_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes value2_bytes = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_value2_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool from_primary = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.from_primary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 sequence_number = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_sequence_number(&has_bits);
          _impl_.sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string row = 1;
  if (!this->_internal_row().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_row().data(), static_cast<int>(this->_internal_row().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageServerRequest.row");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_row(), target);
  }

  // string col = 2;
  if (!this->_internal_col().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_col().data(), static_cast<int>(this->_internal_col().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageServerRequest.col");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_col(), target);
  }

  // optional bool is_bytes = 3;
  if (_internal_has_is_bytes()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_bytes(), target);
  }

  // optional string value1 = 4;
  if (_internal_has_value1()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value1().data(), static_cast<int>(this->_internal_value1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageServerRequest.value1");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_value1(), target);
  }

  // optional string value2 = 5;
  if (_internal_has_value2()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value2().data(), static_cast<int>(this->_internal_value2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageServerRequest.value2");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_value2(), target);
  }

  // optional bytes value1_bytes = 6;
  if (_internal_has_value1_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_value1_bytes(), target);
  }

  // optional bytes value2_bytes = 7;
  if (_internal_has_value2_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_value2_bytes(), target);
  }

  // bool from_primary = 8;
  if (this->_internal_from_primary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_from_primary(), target);
  }

  // optional int32 sequence_number = 9;
  if (_internal_has_sequence_number()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_sequence_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageServerRequest)
  return target;
}

size_t StorageServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageServerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string row = 1;
  if (!this->_internal_row().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_row());
  }

  // string col = 2;
  if (!this->_internal_col().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_col());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string value1 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value1());
    }

    // optional string value2 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value2());
    }

    // optional bytes value1_bytes = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value1_bytes());
    }

    // optional bytes value2_bytes = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value2_bytes());
    }

    // optional bool is_bytes = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  // bool from_primary = 8;
  if (this->_internal_from_primary() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 sequence_number = 9;
  if (cached_has_bits & 0x00000020u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_sequence_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageServerRequest::GetClassData() const { return &_class_data_; }


void StorageServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageServerRequest*>(&to_msg);
  auto& from = static_cast<const StorageServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_row().empty()) {
    _this->_internal_set_row(from._internal_row());
  }
  if (!from._internal_col().empty()) {
    _this->_internal_set_col(from._internal_col());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value1(from._internal_value1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value2(from._internal_value2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_value1_bytes(from._internal_value1_bytes());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_value2_bytes(from._internal_value2_bytes());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.is_bytes_ = from._impl_.is_bytes_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (from._internal_from_primary() != 0) {
    _this->_internal_set_from_primary(from._internal_from_primary());
  }
  if (cached_has_bits & 0x00000020u) {
    _this->_internal_set_sequence_number(from._internal_sequence_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageServerRequest::CopyFrom(const StorageServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageServerRequest::IsInitialized() const {
  return true;
}

void StorageServerRequest::InternalSwap(StorageServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.row_, lhs_arena,
      &other->_impl_.row_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.col_, lhs_arena,
      &other->_impl_.col_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value1_, lhs_arena,
      &other->_impl_.value1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value2_, lhs_arena,
      &other->_impl_.value2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value1_bytes_, lhs_arena,
      &other->_impl_.value1_bytes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value2_bytes_, lhs_arena,
      &other->_impl_.value2_bytes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StorageServerRequest, _impl_.sequence_number_)
      + sizeof(StorageServerRequest::_impl_.sequence_number_)
      - PROTOBUF_FIELD_OFFSET(StorageServerRequest, _impl_.is_bytes_)>(
          reinterpret_cast<char*>(&_impl_.is_bytes_),
          reinterpret_cast<char*>(&other->_impl_.is_bytes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[3]);
}

// ===================================================================

class StorageServerResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StorageServerResponse>()._impl_._has_bits_);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value_bytes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

StorageServerResponse::StorageServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageServerResponse)
}
StorageServerResponse::StorageServerResponse(const StorageServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageServerResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){}
    , decltype(_impl_.value_bytes_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_value_bytes()) {
    _this->_impl_.value_bytes_.Set(from._internal_value_bytes(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.StorageServerResponse)
}

inline void StorageServerResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){}
    , decltype(_impl_.value_bytes_){}
  };
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_bytes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_bytes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageServerResponse::~StorageServerResponse() {
  // @@protoc_insertion_point(destructor:backend.StorageServerResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.Destroy();
  _impl_.value_bytes_.Destroy();
}

void StorageServerResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageServerResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_bytes_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageServerResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageServerResponse.value"));
        } else
          goto handle_unusual;
        continue;
      // optional bytes value_bytes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value_bytes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageServerResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageServerResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string value = 1;
  if (_internal_has_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageServerResponse.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  // optional bytes value_bytes = 2;
  if (_internal_has_value_bytes()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageServerResponse)
  return target;
}

size_t StorageServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageServerResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

    // optional bytes value_bytes = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_value_bytes());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageServerResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageServerResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageServerResponse::GetClassData() const { return &_class_data_; }


void StorageServerResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageServerResponse*>(&to_msg);
  auto& from = static_cast<const StorageServerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageServerResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value_bytes(from._internal_value_bytes());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageServerResponse::CopyFrom(const StorageServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageServerResponse::IsInitialized() const {
  return true;
}

void StorageServerResponse::InternalSwap(StorageServerResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_bytes_, lhs_arena,
      &other->_impl_.value_bytes_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageServerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[4]);
}

// ===================================================================

class StorageEmpty::_Internal {
 public:
};

StorageEmpty::StorageEmpty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.StorageEmpty)
}
StorageEmpty::StorageEmpty(const StorageEmpty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  StorageEmpty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.StorageEmpty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageEmpty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageEmpty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata StorageEmpty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[5]);
}

// ===================================================================

class StorageGetKVStoreStateRequest::_Internal {
 public:
};

StorageGetKVStoreStateRequest::StorageGetKVStoreStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageGetKVStoreStateRequest)
}
StorageGetKVStoreStateRequest::StorageGetKVStoreStateRequest(const StorageGetKVStoreStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageGetKVStoreStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.StorageGetKVStoreStateRequest)
}

inline void StorageGetKVStoreStateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageGetKVStoreStateRequest::~StorageGetKVStoreStateRequest() {
  // @@protoc_insertion_point(destructor:backend.StorageGetKVStoreStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageGetKVStoreStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
}

void StorageGetKVStoreStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageGetKVStoreStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageGetKVStoreStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageGetKVStoreStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageGetKVStoreStateRequest.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageGetKVStoreStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageGetKVStoreStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageGetKVStoreStateRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageGetKVStoreStateRequest)
  return target;
}

size_t StorageGetKVStoreStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageGetKVStoreStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageGetKVStoreStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageGetKVStoreStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageGetKVStoreStateRequest::GetClassData() const { return &_class_data_; }


void StorageGetKVStoreStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageGetKVStoreStateRequest*>(&to_msg);
  auto& from = static_cast<const StorageGetKVStoreStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageGetKVStoreStateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageGetKVStoreStateRequest::CopyFrom(const StorageGetKVStoreStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageGetKVStoreStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageGetKVStoreStateRequest::IsInitialized() const {
  return true;
}

void StorageGetKVStoreStateRequest::InternalSwap(StorageGetKVStoreStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageGetKVStoreStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[6]);
}

// ===================================================================

class StorageGetKVStoreStateResponse_Row_Column::_Internal {
 public:
};

StorageGetKVStoreStateResponse_Row_Column::StorageGetKVStoreStateResponse_Row_Column(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageGetKVStoreStateResponse.Row.Column)
}
StorageGetKVStoreStateResponse_Row_Column::StorageGetKVStoreStateResponse_Row_Column(const StorageGetKVStoreStateResponse_Row_Column& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageGetKVStoreStateResponse_Row_Column* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.StorageGetKVStoreStateResponse.Row.Column)
}

inline void StorageGetKVStoreStateResponse_Row_Column::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageGetKVStoreStateResponse_Row_Column::~StorageGetKVStoreStateResponse_Row_Column() {
  // @@protoc_insertion_point(destructor:backend.StorageGetKVStoreStateResponse.Row.Column)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageGetKVStoreStateResponse_Row_Column::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.data_.Destroy();
}

void StorageGetKVStoreStateResponse_Row_Column::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageGetKVStoreStateResponse_Row_Column::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageGetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageGetKVStoreStateResponse_Row_Column::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageGetKVStoreStateResponse.Row.Column.name"));
        } else
          goto handle_unusual;
        continue;
      // bytes data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageGetKVStoreStateResponse_Row_Column::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageGetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageGetKVStoreStateResponse.Row.Column.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageGetKVStoreStateResponse.Row.Column)
  return target;
}

size_t StorageGetKVStoreStateResponse_Row_Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageGetKVStoreStateResponse.Row.Column)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageGetKVStoreStateResponse_Row_Column::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageGetKVStoreStateResponse_Row_Column::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageGetKVStoreStateResponse_Row_Column::GetClassData() const { return &_class_data_; }


void StorageGetKVStoreStateResponse_Row_Column::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageGetKVStoreStateResponse_Row_Column*>(&to_msg);
  auto& from = static_cast<const StorageGetKVStoreStateResponse_Row_Column&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageGetKVStoreStateResponse.Row.Column)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageGetKVStoreStateResponse_Row_Column::CopyFrom(const StorageGetKVStoreStateResponse_Row_Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageGetKVStoreStateResponse.Row.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageGetKVStoreStateResponse_Row_Column::IsInitialized() const {
  return true;
}

void StorageGetKVStoreStateResponse_Row_Column::InternalSwap(StorageGetKVStoreStateResponse_Row_Column* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageGetKVStoreStateResponse_Row_Column::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[7]);
}

// ===================================================================

class StorageGetKVStoreStateResponse_Row::_Internal {
 public:
};

StorageGetKVStoreStateResponse_Row::StorageGetKVStoreStateResponse_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageGetKVStoreStateResponse.Row)
}
StorageGetKVStoreStateResponse_Row::StorageGetKVStoreStateResponse_Row(const StorageGetKVStoreStateResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageGetKVStoreStateResponse_Row* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){from._impl_.columns_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.StorageGetKVStoreStateResponse.Row)
}

inline void StorageGetKVStoreStateResponse_Row::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StorageGetKVStoreStateResponse_Row::~StorageGetKVStoreStateResponse_Row() {
  // @@protoc_insertion_point(destructor:backend.StorageGetKVStoreStateResponse.Row)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageGetKVStoreStateResponse_Row::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.columns_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void StorageGetKVStoreStateResponse_Row::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageGetKVStoreStateResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageGetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageGetKVStoreStateResponse_Row::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.StorageGetKVStoreStateResponse.Row.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.StorageGetKVStoreStateResponse.Row.Column columns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_columns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageGetKVStoreStateResponse_Row::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageGetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.StorageGetKVStoreStateResponse.Row.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .backend.StorageGetKVStoreStateResponse.Row.Column columns = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_columns_size()); i < n; i++) {
    const auto& repfield = this->_internal_columns(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageGetKVStoreStateResponse.Row)
  return target;
}

size_t StorageGetKVStoreStateResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageGetKVStoreStateResponse.Row)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.StorageGetKVStoreStateResponse.Row.Column columns = 2;
  total_size += 1UL * this->_internal_columns_size();
  for (const auto& msg : this->_impl_.columns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageGetKVStoreStateResponse_Row::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageGetKVStoreStateResponse_Row::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageGetKVStoreStateResponse_Row::GetClassData() const { return &_class_data_; }


void StorageGetKVStoreStateResponse_Row::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageGetKVStoreStateResponse_Row*>(&to_msg);
  auto& from = static_cast<const StorageGetKVStoreStateResponse_Row&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageGetKVStoreStateResponse.Row)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.columns_.MergeFrom(from._impl_.columns_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageGetKVStoreStateResponse_Row::CopyFrom(const StorageGetKVStoreStateResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageGetKVStoreStateResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageGetKVStoreStateResponse_Row::IsInitialized() const {
  return true;
}

void StorageGetKVStoreStateResponse_Row::InternalSwap(StorageGetKVStoreStateResponse_Row* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageGetKVStoreStateResponse_Row::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[8]);
}

// ===================================================================

class StorageGetKVStoreStateResponse::_Internal {
 public:
};

StorageGetKVStoreStateResponse::StorageGetKVStoreStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.StorageGetKVStoreStateResponse)
}
StorageGetKVStoreStateResponse::StorageGetKVStoreStateResponse(const StorageGetKVStoreStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StorageGetKVStoreStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){from._impl_.rows_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.StorageGetKVStoreStateResponse)
}

inline void StorageGetKVStoreStateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StorageGetKVStoreStateResponse::~StorageGetKVStoreStateResponse() {
  // @@protoc_insertion_point(destructor:backend.StorageGetKVStoreStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StorageGetKVStoreStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rows_.~RepeatedPtrField();
}

void StorageGetKVStoreStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StorageGetKVStoreStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.StorageGetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rows_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StorageGetKVStoreStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.StorageGetKVStoreStateResponse.Row rows = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StorageGetKVStoreStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.StorageGetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.StorageGetKVStoreStateResponse.Row rows = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rows_size()); i < n; i++) {
    const auto& repfield = this->_internal_rows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.StorageGetKVStoreStateResponse)
  return target;
}

size_t StorageGetKVStoreStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.StorageGetKVStoreStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.StorageGetKVStoreStateResponse.Row rows = 1;
  total_size += 1UL * this->_internal_rows_size();
  for (const auto& msg : this->_impl_.rows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StorageGetKVStoreStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StorageGetKVStoreStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StorageGetKVStoreStateResponse::GetClassData() const { return &_class_data_; }


void StorageGetKVStoreStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StorageGetKVStoreStateResponse*>(&to_msg);
  auto& from = static_cast<const StorageGetKVStoreStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.StorageGetKVStoreStateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rows_.MergeFrom(from._impl_.rows_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StorageGetKVStoreStateResponse::CopyFrom(const StorageGetKVStoreStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.StorageGetKVStoreStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageGetKVStoreStateResponse::IsInitialized() const {
  return true;
}

void StorageGetKVStoreStateResponse::InternalSwap(StorageGetKVStoreStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rows_.InternalSwap(&other->_impl_.rows_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StorageGetKVStoreStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[9]);
}

// ===================================================================

class RequestLatestTabletStateRequest::_Internal {
 public:
};

RequestLatestTabletStateRequest::RequestLatestTabletStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.RequestLatestTabletStateRequest)
}
RequestLatestTabletStateRequest::RequestLatestTabletStateRequest(const RequestLatestTabletStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestLatestTabletStateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.address_){}
    , decltype(_impl_.checkpoint_version_){}
    , decltype(_impl_.log_length_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablet_range().empty()) {
    _this->_impl_.tablet_range_.Set(from._internal_tablet_range(), 
      _this->GetArenaForAllocation());
  }
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.checkpoint_version_, &from._impl_.checkpoint_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.log_length_) -
    reinterpret_cast<char*>(&_impl_.checkpoint_version_)) + sizeof(_impl_.log_length_));
  // @@protoc_insertion_point(copy_constructor:backend.RequestLatestTabletStateRequest)
}

inline void RequestLatestTabletStateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.address_){}
    , decltype(_impl_.checkpoint_version_){0}
    , decltype(_impl_.log_length_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestLatestTabletStateRequest::~RequestLatestTabletStateRequest() {
  // @@protoc_insertion_point(destructor:backend.RequestLatestTabletStateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestLatestTabletStateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablet_range_.Destroy();
  _impl_.address_.Destroy();
}

void RequestLatestTabletStateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestLatestTabletStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.RequestLatestTabletStateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablet_range_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  ::memset(&_impl_.checkpoint_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.log_length_) -
      reinterpret_cast<char*>(&_impl_.checkpoint_version_)) + sizeof(_impl_.log_length_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestLatestTabletStateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tablet_range = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tablet_range();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.RequestLatestTabletStateRequest.tablet_range"));
        } else
          goto handle_unusual;
        continue;
      // int32 checkpoint_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.checkpoint_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 log_length = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.log_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string address = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.RequestLatestTabletStateRequest.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestLatestTabletStateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.RequestLatestTabletStateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tablet_range = 1;
  if (!this->_internal_tablet_range().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablet_range().data(), static_cast<int>(this->_internal_tablet_range().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.RequestLatestTabletStateRequest.tablet_range");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablet_range(), target);
  }

  // int32 checkpoint_version = 2;
  if (this->_internal_checkpoint_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_checkpoint_version(), target);
  }

  // int32 log_length = 3;
  if (this->_internal_log_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_log_length(), target);
  }

  // string address = 4;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.RequestLatestTabletStateRequest.address");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.RequestLatestTabletStateRequest)
  return target;
}

size_t RequestLatestTabletStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.RequestLatestTabletStateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tablet_range = 1;
  if (!this->_internal_tablet_range().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablet_range());
  }

  // string address = 4;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // int32 checkpoint_version = 2;
  if (this->_internal_checkpoint_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checkpoint_version());
  }

  // int32 log_length = 3;
  if (this->_internal_log_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_log_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestLatestTabletStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestLatestTabletStateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestLatestTabletStateRequest::GetClassData() const { return &_class_data_; }


void RequestLatestTabletStateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestLatestTabletStateRequest*>(&to_msg);
  auto& from = static_cast<const RequestLatestTabletStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.RequestLatestTabletStateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tablet_range().empty()) {
    _this->_internal_set_tablet_range(from._internal_tablet_range());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_checkpoint_version() != 0) {
    _this->_internal_set_checkpoint_version(from._internal_checkpoint_version());
  }
  if (from._internal_log_length() != 0) {
    _this->_internal_set_log_length(from._internal_log_length());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestLatestTabletStateRequest::CopyFrom(const RequestLatestTabletStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.RequestLatestTabletStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestLatestTabletStateRequest::IsInitialized() const {
  return true;
}

void RequestLatestTabletStateRequest::InternalSwap(RequestLatestTabletStateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablet_range_, lhs_arena,
      &other->_impl_.tablet_range_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestLatestTabletStateRequest, _impl_.log_length_)
      + sizeof(RequestLatestTabletStateRequest::_impl_.log_length_)
      - PROTOBUF_FIELD_OFFSET(RequestLatestTabletStateRequest, _impl_.checkpoint_version_)>(
          reinterpret_cast<char*>(&_impl_.checkpoint_version_),
          reinterpret_cast<char*>(&other->_impl_.checkpoint_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestLatestTabletStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[10]);
}

// ===================================================================

class RequestLatestTabletStateResponse::_Internal {
 public:
};

RequestLatestTabletStateResponse::RequestLatestTabletStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.RequestLatestTabletStateResponse)
}
RequestLatestTabletStateResponse::RequestLatestTabletStateResponse(const RequestLatestTabletStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  RequestLatestTabletStateResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.RequestLatestTabletStateResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestLatestTabletStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestLatestTabletStateResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RequestLatestTabletStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[11]);
}

// ===================================================================

class PushCheckpointPartitionRequest::_Internal {
 public:
};

PushCheckpointPartitionRequest::PushCheckpointPartitionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.PushCheckpointPartitionRequest)
}
PushCheckpointPartitionRequest::PushCheckpointPartitionRequest(const PushCheckpointPartitionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushCheckpointPartitionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.checkpoint_version_){}
    , decltype(_impl_.is_last_partition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablet_range().empty()) {
    _this->_impl_.tablet_range_.Set(from._internal_tablet_range(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.checkpoint_version_, &from._impl_.checkpoint_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_last_partition_) -
    reinterpret_cast<char*>(&_impl_.checkpoint_version_)) + sizeof(_impl_.is_last_partition_));
  // @@protoc_insertion_point(copy_constructor:backend.PushCheckpointPartitionRequest)
}

inline void PushCheckpointPartitionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.checkpoint_version_){0}
    , decltype(_impl_.is_last_partition_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PushCheckpointPartitionRequest::~PushCheckpointPartitionRequest() {
  // @@protoc_insertion_point(destructor:backend.PushCheckpointPartitionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushCheckpointPartitionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablet_range_.Destroy();
  _impl_.content_.Destroy();
}

void PushCheckpointPartitionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushCheckpointPartitionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.PushCheckpointPartitionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablet_range_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  ::memset(&_impl_.checkpoint_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_last_partition_) -
      reinterpret_cast<char*>(&_impl_.checkpoint_version_)) + sizeof(_impl_.is_last_partition_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushCheckpointPartitionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 checkpoint_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.checkpoint_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tablet_range = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tablet_range();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.PushCheckpointPartitionRequest.tablet_range"));
        } else
          goto handle_unusual;
        continue;
      // bytes content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_last_partition = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.is_last_partition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushCheckpointPartitionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.PushCheckpointPartitionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_checkpoint_version(), target);
  }

  // string tablet_range = 2;
  if (!this->_internal_tablet_range().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablet_range().data(), static_cast<int>(this->_internal_tablet_range().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.PushCheckpointPartitionRequest.tablet_range");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tablet_range(), target);
  }

  // bytes content = 3;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_content(), target);
  }

  // bool is_last_partition = 4;
  if (this->_internal_is_last_partition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_is_last_partition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.PushCheckpointPartitionRequest)
  return target;
}

size_t PushCheckpointPartitionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.PushCheckpointPartitionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tablet_range = 2;
  if (!this->_internal_tablet_range().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablet_range());
  }

  // bytes content = 3;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  // int32 checkpoint_version = 1;
  if (this->_internal_checkpoint_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_checkpoint_version());
  }

  // bool is_last_partition = 4;
  if (this->_internal_is_last_partition() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushCheckpointPartitionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushCheckpointPartitionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushCheckpointPartitionRequest::GetClassData() const { return &_class_data_; }


void PushCheckpointPartitionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushCheckpointPartitionRequest*>(&to_msg);
  auto& from = static_cast<const PushCheckpointPartitionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.PushCheckpointPartitionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tablet_range().empty()) {
    _this->_internal_set_tablet_range(from._internal_tablet_range());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_checkpoint_version() != 0) {
    _this->_internal_set_checkpoint_version(from._internal_checkpoint_version());
  }
  if (from._internal_is_last_partition() != 0) {
    _this->_internal_set_is_last_partition(from._internal_is_last_partition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushCheckpointPartitionRequest::CopyFrom(const PushCheckpointPartitionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.PushCheckpointPartitionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushCheckpointPartitionRequest::IsInitialized() const {
  return true;
}

void PushCheckpointPartitionRequest::InternalSwap(PushCheckpointPartitionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablet_range_, lhs_arena,
      &other->_impl_.tablet_range_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PushCheckpointPartitionRequest, _impl_.is_last_partition_)
      + sizeof(PushCheckpointPartitionRequest::_impl_.is_last_partition_)
      - PROTOBUF_FIELD_OFFSET(PushCheckpointPartitionRequest, _impl_.checkpoint_version_)>(
          reinterpret_cast<char*>(&_impl_.checkpoint_version_),
          reinterpret_cast<char*>(&other->_impl_.checkpoint_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PushCheckpointPartitionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[12]);
}

// ===================================================================

class PushCheckpointPartitionResponse::_Internal {
 public:
};

PushCheckpointPartitionResponse::PushCheckpointPartitionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.PushCheckpointPartitionResponse)
}
PushCheckpointPartitionResponse::PushCheckpointPartitionResponse(const PushCheckpointPartitionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PushCheckpointPartitionResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.PushCheckpointPartitionResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushCheckpointPartitionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushCheckpointPartitionResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PushCheckpointPartitionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[13]);
}

// ===================================================================

class PushLogRequest::_Internal {
 public:
};

PushLogRequest::PushLogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.PushLogRequest)
}
PushLogRequest::PushLogRequest(const PushLogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushLogRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tablet_range().empty()) {
    _this->_impl_.tablet_range_.Set(from._internal_tablet_range(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.PushLogRequest)
}

inline void PushLogRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablet_range_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tablet_range_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tablet_range_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PushLogRequest::~PushLogRequest() {
  // @@protoc_insertion_point(destructor:backend.PushLogRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushLogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablet_range_.Destroy();
  _impl_.content_.Destroy();
}

void PushLogRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.PushLogRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablet_range_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushLogRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tablet_range = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tablet_range();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.PushLogRequest.tablet_range"));
        } else
          goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushLogRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.PushLogRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tablet_range = 1;
  if (!this->_internal_tablet_range().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablet_range().data(), static_cast<int>(this->_internal_tablet_range().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.PushLogRequest.tablet_range");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablet_range(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.PushLogRequest)
  return target;
}

size_t PushLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.PushLogRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tablet_range = 1;
  if (!this->_internal_tablet_range().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablet_range());
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushLogRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushLogRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushLogRequest::GetClassData() const { return &_class_data_; }


void PushLogRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushLogRequest*>(&to_msg);
  auto& from = static_cast<const PushLogRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.PushLogRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tablet_range().empty()) {
    _this->_internal_set_tablet_range(from._internal_tablet_range());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushLogRequest::CopyFrom(const PushLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.PushLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushLogRequest::IsInitialized() const {
  return true;
}

void PushLogRequest::InternalSwap(PushLogRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tablet_range_, lhs_arena,
      &other->_impl_.tablet_range_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PushLogRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[14]);
}

// ===================================================================

class PushLogResponse::_Internal {
 public:
};

PushLogResponse::PushLogResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.PushLogResponse)
}
PushLogResponse::PushLogResponse(const PushLogResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PushLogResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.PushLogResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushLogResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushLogResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PushLogResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_storageserver_2eproto_getter, &descriptor_table_storageserver_2eproto_once,
      file_level_metadata_storageserver_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace backend
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo*
Arena::CreateMaybeMessage< ::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushStorageTabletsRequest_TabletGroup_ServerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushStorageTabletsRequest_TabletGroup*
Arena::CreateMaybeMessage< ::backend::PushStorageTabletsRequest_TabletGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushStorageTabletsRequest_TabletGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushStorageTabletsRequest*
Arena::CreateMaybeMessage< ::backend::PushStorageTabletsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushStorageTabletsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageServerRequest*
Arena::CreateMaybeMessage< ::backend::StorageServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageServerResponse*
Arena::CreateMaybeMessage< ::backend::StorageServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageEmpty*
Arena::CreateMaybeMessage< ::backend::StorageEmpty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageEmpty >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageGetKVStoreStateRequest*
Arena::CreateMaybeMessage< ::backend::StorageGetKVStoreStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageGetKVStoreStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageGetKVStoreStateResponse_Row_Column*
Arena::CreateMaybeMessage< ::backend::StorageGetKVStoreStateResponse_Row_Column >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageGetKVStoreStateResponse_Row_Column >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageGetKVStoreStateResponse_Row*
Arena::CreateMaybeMessage< ::backend::StorageGetKVStoreStateResponse_Row >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageGetKVStoreStateResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::StorageGetKVStoreStateResponse*
Arena::CreateMaybeMessage< ::backend::StorageGetKVStoreStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::StorageGetKVStoreStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::RequestLatestTabletStateRequest*
Arena::CreateMaybeMessage< ::backend::RequestLatestTabletStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::RequestLatestTabletStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::RequestLatestTabletStateResponse*
Arena::CreateMaybeMessage< ::backend::RequestLatestTabletStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::RequestLatestTabletStateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushCheckpointPartitionRequest*
Arena::CreateMaybeMessage< ::backend::PushCheckpointPartitionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushCheckpointPartitionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushCheckpointPartitionResponse*
Arena::CreateMaybeMessage< ::backend::PushCheckpointPartitionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushCheckpointPartitionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushLogRequest*
Arena::CreateMaybeMessage< ::backend::PushLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::PushLogResponse*
Arena::CreateMaybeMessage< ::backend::PushLogResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::PushLogResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
