syntax = "proto3";

package backend;

service StorageServer {
  rpc PushStorageTablets (PushStorageTabletsRequest) returns (StorageServerResponse) {}

  rpc StorageGet (StorageServerRequest) returns (StorageServerResponse) {}

  rpc StoragePut (StorageServerRequest) returns (StorageServerResponse) {}
  
  rpc StorageCPut (StorageServerRequest) returns (StorageServerResponse) {}

  rpc StorageDelete (StorageServerRequest) returns (StorageServerResponse) {}

  rpc KillServer (StorageEmpty) returns (StorageEmpty) {}

  rpc ReviveServer (StorageEmpty) returns (StorageEmpty) {}

  rpc GetKVStoreState (StorageGetKVStoreStateRequest) returns (StorageGetKVStoreStateResponse) {}

  rpc RequestLatestTabletState (RequestLatestTabletStateRequest) returns (RequestLatestTabletStateResponse) {}

  rpc PushCheckpointPartition (stream PushCheckpointPartitionRequest) returns (PushCheckpointPartitionResponse) {}

  rpc PushLog (PushLogRequest) returns (PushLogResponse) {}
  
  rpc PulseCheck (StorageEmpty) returns (StorageEmpty) {}
}

message PushStorageTabletsRequest {
  message TabletGroup {
    message ServerInfo {
      string address = 1;
      bool primary = 2;
    }
    string begin = 1;
    string end = 2;
    repeated ServerInfo servers = 3;
  }

  repeated TabletGroup tablets = 1;
}

message StorageServerRequest {
  string row = 1;
  string col = 2;
  optional bool is_bytes = 3;
  optional string value1 = 4;
  optional string value2 = 5;
  optional bytes value1_bytes = 6;
  optional bytes value2_bytes = 7;
  bool from_primary = 8;
  optional int32 sequence_number = 9;
}

message StorageServerResponse {
  optional string value = 1;  
  optional bytes value_bytes = 2;
}

message StorageEmpty {
}

message StorageGetKVStoreStateRequest {
  string key = 1;
}

message StorageGetKVStoreStateResponse {
  message Row {
    message Column {
      string name = 1;
      bytes data = 2;
    }
    string name = 1;
    repeated Column columns = 2;
  }
  repeated Row rows = 1;
}

message RequestLatestTabletStateRequest {
  string tablet_range = 1;
  int32 checkpoint_version = 2;
  int32 log_length = 3;
  string address = 4;
}

message RequestLatestTabletStateResponse {

}

message PushCheckpointPartitionRequest {
  int32 checkpoint_version = 1;
  string tablet_range = 2;
  bytes content = 3;
  bool is_last_partition = 4;
}

message PushCheckpointPartitionResponse {

}

message PushLogRequest {
  string tablet_range = 1;
  bytes content = 2;
  // string content = 2;
}

message PushLogResponse {

}