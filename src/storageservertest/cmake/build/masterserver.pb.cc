// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: masterserver.proto

#include "masterserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace backend {
PROTOBUF_CONSTEXPR GetTabletsUserRequest::GetTabletsUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsUserRequestDefaultTypeInternal() {}
  union {
    GetTabletsUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsUserRequestDefaultTypeInternal _GetTabletsUserRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsServerRequest::GetTabletsServerRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsServerRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsServerRequestDefaultTypeInternal() {}
  union {
    GetTabletsServerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsServerRequestDefaultTypeInternal _GetTabletsServerRequest_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsResponse_TabletGroup_ServerInfo::GetTabletsResponse_TabletGroup_ServerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.master_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsResponse_TabletGroup_ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsResponse_TabletGroup_ServerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsResponse_TabletGroup_ServerInfoDefaultTypeInternal() {}
  union {
    GetTabletsResponse_TabletGroup_ServerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsResponse_TabletGroup_ServerInfoDefaultTypeInternal _GetTabletsResponse_TabletGroup_ServerInfo_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsResponse_TabletGroup::GetTabletsResponse_TabletGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.servers_)*/{}
  , /*decltype(_impl_.begin_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.end_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsResponse_TabletGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsResponse_TabletGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsResponse_TabletGroupDefaultTypeInternal() {}
  union {
    GetTabletsResponse_TabletGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsResponse_TabletGroupDefaultTypeInternal _GetTabletsResponse_TabletGroup_default_instance_;
PROTOBUF_CONSTEXPR GetTabletsResponse::GetTabletsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tablets_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetTabletsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTabletsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTabletsResponseDefaultTypeInternal() {}
  union {
    GetTabletsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTabletsResponseDefaultTypeInternal _GetTabletsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetKVStoreStateRequest::GetKVStoreStateRequest(
    ::_pbi::ConstantInitialized) {}
struct GetKVStoreStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKVStoreStateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKVStoreStateRequestDefaultTypeInternal() {}
  union {
    GetKVStoreStateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKVStoreStateRequestDefaultTypeInternal _GetKVStoreStateRequest_default_instance_;
PROTOBUF_CONSTEXPR GetKVStoreStateResponse_Row_Column::GetKVStoreStateResponse_Row_Column(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKVStoreStateResponse_Row_ColumnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKVStoreStateResponse_Row_ColumnDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKVStoreStateResponse_Row_ColumnDefaultTypeInternal() {}
  union {
    GetKVStoreStateResponse_Row_Column _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKVStoreStateResponse_Row_ColumnDefaultTypeInternal _GetKVStoreStateResponse_Row_Column_default_instance_;
PROTOBUF_CONSTEXPR GetKVStoreStateResponse_Row::GetKVStoreStateResponse_Row(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.columns_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKVStoreStateResponse_RowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKVStoreStateResponse_RowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKVStoreStateResponse_RowDefaultTypeInternal() {}
  union {
    GetKVStoreStateResponse_Row _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKVStoreStateResponse_RowDefaultTypeInternal _GetKVStoreStateResponse_Row_default_instance_;
PROTOBUF_CONSTEXPR GetKVStoreStateResponse::GetKVStoreStateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rows_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetKVStoreStateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetKVStoreStateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetKVStoreStateResponseDefaultTypeInternal() {}
  union {
    GetKVStoreStateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetKVStoreStateResponseDefaultTypeInternal _GetKVStoreStateResponse_default_instance_;
}  // namespace backend
static ::_pb::Metadata file_level_metadata_masterserver_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_masterserver_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_masterserver_2eproto = nullptr;

const uint32_t TableStruct_masterserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsUserRequest, _impl_.key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsServerRequest, _impl_.address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup_ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup_ServerInfo, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup_ServerInfo, _impl_.master_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup, _impl_.begin_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup, _impl_.end_),
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse_TabletGroup, _impl_.servers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetTabletsResponse, _impl_.tablets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row_Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row_Column, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row_Column, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse_Row, _impl_.columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::backend::GetKVStoreStateResponse, _impl_.rows_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::backend::GetTabletsUserRequest)},
  { 7, -1, -1, sizeof(::backend::GetTabletsServerRequest)},
  { 14, -1, -1, sizeof(::backend::GetTabletsResponse_TabletGroup_ServerInfo)},
  { 22, -1, -1, sizeof(::backend::GetTabletsResponse_TabletGroup)},
  { 31, -1, -1, sizeof(::backend::GetTabletsResponse)},
  { 38, -1, -1, sizeof(::backend::GetKVStoreStateRequest)},
  { 44, -1, -1, sizeof(::backend::GetKVStoreStateResponse_Row_Column)},
  { 52, -1, -1, sizeof(::backend::GetKVStoreStateResponse_Row)},
  { 60, -1, -1, sizeof(::backend::GetKVStoreStateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::backend::_GetTabletsUserRequest_default_instance_._instance,
  &::backend::_GetTabletsServerRequest_default_instance_._instance,
  &::backend::_GetTabletsResponse_TabletGroup_ServerInfo_default_instance_._instance,
  &::backend::_GetTabletsResponse_TabletGroup_default_instance_._instance,
  &::backend::_GetTabletsResponse_default_instance_._instance,
  &::backend::_GetKVStoreStateRequest_default_instance_._instance,
  &::backend::_GetKVStoreStateResponse_Row_Column_default_instance_._instance,
  &::backend::_GetKVStoreStateResponse_Row_default_instance_._instance,
  &::backend::_GetKVStoreStateResponse_default_instance_._instance,
};

const char descriptor_table_protodef_masterserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022masterserver.proto\022\007backend\"$\n\025GetTabl"
  "etsUserRequest\022\013\n\003key\030\001 \001(\t\"*\n\027GetTablet"
  "sServerRequest\022\017\n\007address\030\001 \001(\t\"\356\001\n\022GetT"
  "abletsResponse\0228\n\007tablets\030\001 \003(\0132\'.backen"
  "d.GetTabletsResponse.TabletGroup\032\235\001\n\013Tab"
  "letGroup\022\r\n\005begin\030\001 \001(\t\022\013\n\003end\030\002 \001(\t\022C\n\007"
  "servers\030\003 \003(\01322.backend.GetTabletsRespon"
  "se.TabletGroup.ServerInfo\032-\n\nServerInfo\022"
  "\017\n\007address\030\001 \001(\t\022\016\n\006master\030\002 \001(\010\"\030\n\026GetK"
  "VStoreStateRequest\"\306\001\n\027GetKVStoreStateRe"
  "sponse\0222\n\004rows\030\001 \003(\0132$.backend.GetKVStor"
  "eStateResponse.Row\032w\n\003Row\022\014\n\004name\030\001 \001(\t\022"
  "<\n\007columns\030\002 \003(\0132+.backend.GetKVStoreSta"
  "teResponse.Row.Column\032$\n\006Column\022\014\n\004name\030"
  "\001 \001(\t\022\014\n\004data\030\002 \001(\t2\222\002\n\014MasterServer\022R\n\021"
  "GetTabletsForUser\022\036.backend.GetTabletsUs"
  "erRequest\032\033.backend.GetTabletsResponse\"\000"
  "\022V\n\023GetTabletsForServer\022 .backend.GetTab"
  "letsServerRequest\032\033.backend.GetTabletsRe"
  "sponse\"\000\022V\n\017GetKVStoreState\022\037.backend.Ge"
  "tKVStoreStateRequest\032 .backend.GetKVStor"
  "eStateResponse\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_masterserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_masterserver_2eproto = {
    false, false, 864, descriptor_table_protodef_masterserver_2eproto,
    "masterserver.proto",
    &descriptor_table_masterserver_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_masterserver_2eproto::offsets,
    file_level_metadata_masterserver_2eproto, file_level_enum_descriptors_masterserver_2eproto,
    file_level_service_descriptors_masterserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_masterserver_2eproto_getter() {
  return &descriptor_table_masterserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_masterserver_2eproto(&descriptor_table_masterserver_2eproto);
namespace backend {

// ===================================================================

class GetTabletsUserRequest::_Internal {
 public:
};

GetTabletsUserRequest::GetTabletsUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsUserRequest)
}
GetTabletsUserRequest::GetTabletsUserRequest(const GetTabletsUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsUserRequest)
}

inline void GetTabletsUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsUserRequest::~GetTabletsUserRequest() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
}

void GetTabletsUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsUserRequest.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsUserRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsUserRequest)
  return target;
}

size_t GetTabletsUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsUserRequest::GetClassData() const { return &_class_data_; }


void GetTabletsUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsUserRequest*>(&to_msg);
  auto& from = static_cast<const GetTabletsUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsUserRequest::CopyFrom(const GetTabletsUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsUserRequest::IsInitialized() const {
  return true;
}

void GetTabletsUserRequest::InternalSwap(GetTabletsUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[0]);
}

// ===================================================================

class GetTabletsServerRequest::_Internal {
 public:
};

GetTabletsServerRequest::GetTabletsServerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsServerRequest)
}
GetTabletsServerRequest::GetTabletsServerRequest(const GetTabletsServerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsServerRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsServerRequest)
}

inline void GetTabletsServerRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsServerRequest::~GetTabletsServerRequest() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsServerRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsServerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void GetTabletsServerRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsServerRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsServerRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsServerRequest.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsServerRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsServerRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsServerRequest.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsServerRequest)
  return target;
}

size_t GetTabletsServerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsServerRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsServerRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsServerRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsServerRequest::GetClassData() const { return &_class_data_; }


void GetTabletsServerRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsServerRequest*>(&to_msg);
  auto& from = static_cast<const GetTabletsServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsServerRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsServerRequest::CopyFrom(const GetTabletsServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsServerRequest::IsInitialized() const {
  return true;
}

void GetTabletsServerRequest::InternalSwap(GetTabletsServerRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsServerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[1]);
}

// ===================================================================

class GetTabletsResponse_TabletGroup_ServerInfo::_Internal {
 public:
};

GetTabletsResponse_TabletGroup_ServerInfo::GetTabletsResponse_TabletGroup_ServerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsResponse.TabletGroup.ServerInfo)
}
GetTabletsResponse_TabletGroup_ServerInfo::GetTabletsResponse_TabletGroup_ServerInfo(const GetTabletsResponse_TabletGroup_ServerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsResponse_TabletGroup_ServerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.master_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.master_ = from._impl_.master_;
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsResponse.TabletGroup.ServerInfo)
}

inline void GetTabletsResponse_TabletGroup_ServerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.address_){}
    , decltype(_impl_.master_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsResponse_TabletGroup_ServerInfo::~GetTabletsResponse_TabletGroup_ServerInfo() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsResponse_TabletGroup_ServerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.address_.Destroy();
}

void GetTabletsResponse_TabletGroup_ServerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsResponse_TabletGroup_ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.master_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsResponse_TabletGroup_ServerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsResponse.TabletGroup.ServerInfo.address"));
        } else
          goto handle_unusual;
        continue;
      // bool master = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.master_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsResponse_TabletGroup_ServerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsResponse.TabletGroup.ServerInfo.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  // bool master = 2;
  if (this->_internal_master() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_master(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  return target;
}

size_t GetTabletsResponse_TabletGroup_ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // bool master = 2;
  if (this->_internal_master() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsResponse_TabletGroup_ServerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsResponse_TabletGroup_ServerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsResponse_TabletGroup_ServerInfo::GetClassData() const { return &_class_data_; }


void GetTabletsResponse_TabletGroup_ServerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsResponse_TabletGroup_ServerInfo*>(&to_msg);
  auto& from = static_cast<const GetTabletsResponse_TabletGroup_ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_master() != 0) {
    _this->_internal_set_master(from._internal_master());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsResponse_TabletGroup_ServerInfo::CopyFrom(const GetTabletsResponse_TabletGroup_ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsResponse.TabletGroup.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsResponse_TabletGroup_ServerInfo::IsInitialized() const {
  return true;
}

void GetTabletsResponse_TabletGroup_ServerInfo::InternalSwap(GetTabletsResponse_TabletGroup_ServerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  swap(_impl_.master_, other->_impl_.master_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsResponse_TabletGroup_ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[2]);
}

// ===================================================================

class GetTabletsResponse_TabletGroup::_Internal {
 public:
};

GetTabletsResponse_TabletGroup::GetTabletsResponse_TabletGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsResponse.TabletGroup)
}
GetTabletsResponse_TabletGroup::GetTabletsResponse_TabletGroup(const GetTabletsResponse_TabletGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsResponse_TabletGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){from._impl_.servers_}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_begin().empty()) {
    _this->_impl_.begin_.Set(from._internal_begin(), 
      _this->GetArenaForAllocation());
  }
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end().empty()) {
    _this->_impl_.end_.Set(from._internal_end(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsResponse.TabletGroup)
}

inline void GetTabletsResponse_TabletGroup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.servers_){arena}
    , decltype(_impl_.begin_){}
    , decltype(_impl_.end_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.begin_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.begin_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetTabletsResponse_TabletGroup::~GetTabletsResponse_TabletGroup() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsResponse.TabletGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsResponse_TabletGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.servers_.~RepeatedPtrField();
  _impl_.begin_.Destroy();
  _impl_.end_.Destroy();
}

void GetTabletsResponse_TabletGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsResponse_TabletGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsResponse.TabletGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servers_.Clear();
  _impl_.begin_.ClearToEmpty();
  _impl_.end_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsResponse_TabletGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string begin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_begin();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsResponse.TabletGroup.begin"));
        } else
          goto handle_unusual;
        continue;
      // string end = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_end();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetTabletsResponse.TabletGroup.end"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.GetTabletsResponse.TabletGroup.ServerInfo servers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_servers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsResponse_TabletGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsResponse.TabletGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_begin().data(), static_cast<int>(this->_internal_begin().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsResponse.TabletGroup.begin");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_begin(), target);
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end().data(), static_cast<int>(this->_internal_end().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetTabletsResponse.TabletGroup.end");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_end(), target);
  }

  // repeated .backend.GetTabletsResponse.TabletGroup.ServerInfo servers = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_servers_size()); i < n; i++) {
    const auto& repfield = this->_internal_servers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsResponse.TabletGroup)
  return target;
}

size_t GetTabletsResponse_TabletGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsResponse.TabletGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetTabletsResponse.TabletGroup.ServerInfo servers = 3;
  total_size += 1UL * this->_internal_servers_size();
  for (const auto& msg : this->_impl_.servers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string begin = 1;
  if (!this->_internal_begin().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_begin());
  }

  // string end = 2;
  if (!this->_internal_end().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsResponse_TabletGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsResponse_TabletGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsResponse_TabletGroup::GetClassData() const { return &_class_data_; }


void GetTabletsResponse_TabletGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsResponse_TabletGroup*>(&to_msg);
  auto& from = static_cast<const GetTabletsResponse_TabletGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsResponse.TabletGroup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.servers_.MergeFrom(from._impl_.servers_);
  if (!from._internal_begin().empty()) {
    _this->_internal_set_begin(from._internal_begin());
  }
  if (!from._internal_end().empty()) {
    _this->_internal_set_end(from._internal_end());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsResponse_TabletGroup::CopyFrom(const GetTabletsResponse_TabletGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsResponse.TabletGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsResponse_TabletGroup::IsInitialized() const {
  return true;
}

void GetTabletsResponse_TabletGroup::InternalSwap(GetTabletsResponse_TabletGroup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.servers_.InternalSwap(&other->_impl_.servers_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.begin_, lhs_arena,
      &other->_impl_.begin_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.end_, lhs_arena,
      &other->_impl_.end_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsResponse_TabletGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[3]);
}

// ===================================================================

class GetTabletsResponse::_Internal {
 public:
};

GetTabletsResponse::GetTabletsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetTabletsResponse)
}
GetTabletsResponse::GetTabletsResponse(const GetTabletsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetTabletsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){from._impl_.tablets_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetTabletsResponse)
}

inline void GetTabletsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tablets_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetTabletsResponse::~GetTabletsResponse() {
  // @@protoc_insertion_point(destructor:backend.GetTabletsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetTabletsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tablets_.~RepeatedPtrField();
}

void GetTabletsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetTabletsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetTabletsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tablets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTabletsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.GetTabletsResponse.TabletGroup tablets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tablets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTabletsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetTabletsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.GetTabletsResponse.TabletGroup tablets = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tablets_size()); i < n; i++) {
    const auto& repfield = this->_internal_tablets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetTabletsResponse)
  return target;
}

size_t GetTabletsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetTabletsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetTabletsResponse.TabletGroup tablets = 1;
  total_size += 1UL * this->_internal_tablets_size();
  for (const auto& msg : this->_impl_.tablets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTabletsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetTabletsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTabletsResponse::GetClassData() const { return &_class_data_; }


void GetTabletsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetTabletsResponse*>(&to_msg);
  auto& from = static_cast<const GetTabletsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetTabletsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tablets_.MergeFrom(from._impl_.tablets_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTabletsResponse::CopyFrom(const GetTabletsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetTabletsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTabletsResponse::IsInitialized() const {
  return true;
}

void GetTabletsResponse::InternalSwap(GetTabletsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tablets_.InternalSwap(&other->_impl_.tablets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTabletsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[4]);
}

// ===================================================================

class GetKVStoreStateRequest::_Internal {
 public:
};

GetKVStoreStateRequest::GetKVStoreStateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:backend.GetKVStoreStateRequest)
}
GetKVStoreStateRequest::GetKVStoreStateRequest(const GetKVStoreStateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetKVStoreStateRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetKVStoreStateRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKVStoreStateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKVStoreStateRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetKVStoreStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[5]);
}

// ===================================================================

class GetKVStoreStateResponse_Row_Column::_Internal {
 public:
};

GetKVStoreStateResponse_Row_Column::GetKVStoreStateResponse_Row_Column(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetKVStoreStateResponse.Row.Column)
}
GetKVStoreStateResponse_Row_Column::GetKVStoreStateResponse_Row_Column(const GetKVStoreStateResponse_Row_Column& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKVStoreStateResponse_Row_Column* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetKVStoreStateResponse.Row.Column)
}

inline void GetKVStoreStateResponse_Row_Column::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKVStoreStateResponse_Row_Column::~GetKVStoreStateResponse_Row_Column() {
  // @@protoc_insertion_point(destructor:backend.GetKVStoreStateResponse.Row.Column)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKVStoreStateResponse_Row_Column::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.data_.Destroy();
}

void GetKVStoreStateResponse_Row_Column::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKVStoreStateResponse_Row_Column::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKVStoreStateResponse_Row_Column::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetKVStoreStateResponse.Row.Column.name"));
        } else
          goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetKVStoreStateResponse.Row.Column.data"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKVStoreStateResponse_Row_Column::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetKVStoreStateResponse.Row.Column)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetKVStoreStateResponse.Row.Column.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetKVStoreStateResponse.Row.Column.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetKVStoreStateResponse.Row.Column)
  return target;
}

size_t GetKVStoreStateResponse_Row_Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetKVStoreStateResponse.Row.Column)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKVStoreStateResponse_Row_Column::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKVStoreStateResponse_Row_Column::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKVStoreStateResponse_Row_Column::GetClassData() const { return &_class_data_; }


void GetKVStoreStateResponse_Row_Column::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKVStoreStateResponse_Row_Column*>(&to_msg);
  auto& from = static_cast<const GetKVStoreStateResponse_Row_Column&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetKVStoreStateResponse.Row.Column)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKVStoreStateResponse_Row_Column::CopyFrom(const GetKVStoreStateResponse_Row_Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetKVStoreStateResponse.Row.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKVStoreStateResponse_Row_Column::IsInitialized() const {
  return true;
}

void GetKVStoreStateResponse_Row_Column::InternalSwap(GetKVStoreStateResponse_Row_Column* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKVStoreStateResponse_Row_Column::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[6]);
}

// ===================================================================

class GetKVStoreStateResponse_Row::_Internal {
 public:
};

GetKVStoreStateResponse_Row::GetKVStoreStateResponse_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetKVStoreStateResponse.Row)
}
GetKVStoreStateResponse_Row::GetKVStoreStateResponse_Row(const GetKVStoreStateResponse_Row& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKVStoreStateResponse_Row* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){from._impl_.columns_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:backend.GetKVStoreStateResponse.Row)
}

inline void GetKVStoreStateResponse_Row::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.columns_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKVStoreStateResponse_Row::~GetKVStoreStateResponse_Row() {
  // @@protoc_insertion_point(destructor:backend.GetKVStoreStateResponse.Row)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKVStoreStateResponse_Row::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.columns_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void GetKVStoreStateResponse_Row::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKVStoreStateResponse_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKVStoreStateResponse_Row::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "backend.GetKVStoreStateResponse.Row.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .backend.GetKVStoreStateResponse.Row.Column columns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_columns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKVStoreStateResponse_Row::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetKVStoreStateResponse.Row)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "backend.GetKVStoreStateResponse.Row.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .backend.GetKVStoreStateResponse.Row.Column columns = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_columns_size()); i < n; i++) {
    const auto& repfield = this->_internal_columns(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetKVStoreStateResponse.Row)
  return target;
}

size_t GetKVStoreStateResponse_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetKVStoreStateResponse.Row)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetKVStoreStateResponse.Row.Column columns = 2;
  total_size += 1UL * this->_internal_columns_size();
  for (const auto& msg : this->_impl_.columns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKVStoreStateResponse_Row::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKVStoreStateResponse_Row::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKVStoreStateResponse_Row::GetClassData() const { return &_class_data_; }


void GetKVStoreStateResponse_Row::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKVStoreStateResponse_Row*>(&to_msg);
  auto& from = static_cast<const GetKVStoreStateResponse_Row&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetKVStoreStateResponse.Row)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.columns_.MergeFrom(from._impl_.columns_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKVStoreStateResponse_Row::CopyFrom(const GetKVStoreStateResponse_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetKVStoreStateResponse.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKVStoreStateResponse_Row::IsInitialized() const {
  return true;
}

void GetKVStoreStateResponse_Row::InternalSwap(GetKVStoreStateResponse_Row* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKVStoreStateResponse_Row::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[7]);
}

// ===================================================================

class GetKVStoreStateResponse::_Internal {
 public:
};

GetKVStoreStateResponse::GetKVStoreStateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:backend.GetKVStoreStateResponse)
}
GetKVStoreStateResponse::GetKVStoreStateResponse(const GetKVStoreStateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetKVStoreStateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){from._impl_.rows_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:backend.GetKVStoreStateResponse)
}

inline void GetKVStoreStateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rows_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetKVStoreStateResponse::~GetKVStoreStateResponse() {
  // @@protoc_insertion_point(destructor:backend.GetKVStoreStateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetKVStoreStateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rows_.~RepeatedPtrField();
}

void GetKVStoreStateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetKVStoreStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:backend.GetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rows_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKVStoreStateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .backend.GetKVStoreStateResponse.Row rows = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rows(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKVStoreStateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:backend.GetKVStoreStateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .backend.GetKVStoreStateResponse.Row rows = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rows_size()); i < n; i++) {
    const auto& repfield = this->_internal_rows(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:backend.GetKVStoreStateResponse)
  return target;
}

size_t GetKVStoreStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:backend.GetKVStoreStateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .backend.GetKVStoreStateResponse.Row rows = 1;
  total_size += 1UL * this->_internal_rows_size();
  for (const auto& msg : this->_impl_.rows_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKVStoreStateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetKVStoreStateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKVStoreStateResponse::GetClassData() const { return &_class_data_; }


void GetKVStoreStateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetKVStoreStateResponse*>(&to_msg);
  auto& from = static_cast<const GetKVStoreStateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:backend.GetKVStoreStateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rows_.MergeFrom(from._impl_.rows_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKVStoreStateResponse::CopyFrom(const GetKVStoreStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:backend.GetKVStoreStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKVStoreStateResponse::IsInitialized() const {
  return true;
}

void GetKVStoreStateResponse::InternalSwap(GetKVStoreStateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rows_.InternalSwap(&other->_impl_.rows_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKVStoreStateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_masterserver_2eproto_getter, &descriptor_table_masterserver_2eproto_once,
      file_level_metadata_masterserver_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace backend
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::backend::GetTabletsUserRequest*
Arena::CreateMaybeMessage< ::backend::GetTabletsUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsServerRequest*
Arena::CreateMaybeMessage< ::backend::GetTabletsServerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsServerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsResponse_TabletGroup_ServerInfo*
Arena::CreateMaybeMessage< ::backend::GetTabletsResponse_TabletGroup_ServerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsResponse_TabletGroup_ServerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsResponse_TabletGroup*
Arena::CreateMaybeMessage< ::backend::GetTabletsResponse_TabletGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsResponse_TabletGroup >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetTabletsResponse*
Arena::CreateMaybeMessage< ::backend::GetTabletsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetTabletsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetKVStoreStateRequest*
Arena::CreateMaybeMessage< ::backend::GetKVStoreStateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetKVStoreStateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetKVStoreStateResponse_Row_Column*
Arena::CreateMaybeMessage< ::backend::GetKVStoreStateResponse_Row_Column >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetKVStoreStateResponse_Row_Column >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetKVStoreStateResponse_Row*
Arena::CreateMaybeMessage< ::backend::GetKVStoreStateResponse_Row >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetKVStoreStateResponse_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::backend::GetKVStoreStateResponse*
Arena::CreateMaybeMessage< ::backend::GetKVStoreStateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::backend::GetKVStoreStateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
